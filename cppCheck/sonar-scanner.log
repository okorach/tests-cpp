DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=75ms
INFO: Load global repositories (done) | time=151ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=2ms
INFO: Load plugins index (done) | time=4ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=70ms
DEBUG: API compatibility mode is enabled on plugin Cobertura [cobertura] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/I [pli] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin VB.NET [vbnet] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin ABAP [abap] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.9 (devcockpit)
DEBUG:   * Cobertura 1.6.3 (cobertura)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * PL/I 1.3.1 (pli)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * VB.NET 2.4 (vbnet)
DEBUG:   * ABAP 3.2.1 (abap)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.3
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: Process project properties
DEBUG: Process project properties (done) | time=2ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.3/projects/cppchecktest
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktest | time=17ms
INFO: Load project repositories (done) | time=93ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * PL/I => "pli"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * Visual Basic .NET => "vbnet"
DEBUG:   * ABAP => "abap"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktest | time=18ms
INFO: Load quality profiles (done) | time=23ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=abap-sonar-way-51499&p=1&ps=500 | time=40ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-80180&p=1&ps=500 | time=65ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-92064&p=1&ps=500 | time=58ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-89857&p=1&ps=500 | time=75ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-56565&p=1&ps=500 | time=152ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-00094&p=1&ps=500 | time=107ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-51195&p=1&ps=500 | time=68ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=pli-sonarqube-way-13968&p=1&ps=500 | time=18ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-31768&p=1&ps=500 | time=58ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-65112&p=1&ps=500 | time=26ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=vbnet-sonar-way-92369&p=1&ps=500 | time=35ms
INFO: Load active rules (done) | time=819ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck testr
INFO: Language is forced to cpp
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=274ms
INFO: Load server rules (done) | time=295ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language PL/I were converted to sonar.lang.patterns.pli : **/*.pli
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language Visual Basic .NET were converted to sonar.lang.patterns.vbnet : **/*.vb
DEBUG: Declared extensions of language ABAP were converted to sonar.lang.patterns.abap : **/*.abap,**/*.ab4,**/*.flow
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/RandDemo.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
INFO: 3 files indexed
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,pli,vbnet,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=10ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=4ms
INFO: Sensor SquidSensorCpp
INFO: build-wrapper output is not used to analyse this project. This may result in false-positives and false-negatives.
INFO: Parsing based on 'c++11' standard.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: 3 source files to be analyzed
DEBUG: 'iostream' file not found
DEBUG: 'iostream' file not found
DEBUG: 'cstdlib' file not found
DEBUG: 'ctime' file not found
DEBUG: 'iostream' file not found
INFO: 3/3 source files analyzed
INFO: PPH: 0 files, 0 bytes, 0 hits, 0 queries
INFO: Sensor SquidSensorCpp (done) | time=1212ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=78ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=0ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdEngine is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/RandDemo.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Detection of duplications for [moduleKey=cppchecktest, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Detection of duplications for [moduleKey=cppchecktest, relative=src/RandDemo.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Detection of duplications for [moduleKey=cppchecktest, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=35ms
INFO: Analysis report generated in 61ms, dir size=57 KB
INFO: Analysis reports compressed in 16ms, zip size=22 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktest&projectName=C%2B%2B%20cppcheck%20testr | time=31ms
INFO: Analysis report uploaded in 34ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktest
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSUo6diV_epFaDr75j_
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 5.730s
INFO: Final Memory: 69M/477M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=47ms
INFO: Load global repositories (done) | time=111ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=2ms
INFO: Load plugins index (done) | time=4ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=56ms
DEBUG: API compatibility mode is enabled on plugin Cobertura [cobertura] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/I [pli] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin VB.NET [vbnet] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin ABAP [abap] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.9 (devcockpit)
DEBUG:   * Cobertura 1.6.3 (cobertura)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * PL/I 1.3.1 (pli)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * VB.NET 2.4 (vbnet)
DEBUG:   * ABAP 3.2.1 (abap)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.3
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: Process project properties
DEBUG: Process project properties (done) | time=3ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.3/projects/cppchecktest
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktest | time=18ms
INFO: Load project repositories (done) | time=82ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * PL/I => "pli"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * Visual Basic .NET => "vbnet"
DEBUG:   * ABAP => "abap"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktest | time=17ms
INFO: Load quality profiles (done) | time=23ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=abap-sonar-way-51499&p=1&ps=500 | time=34ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-80180&p=1&ps=500 | time=41ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-92064&p=1&ps=500 | time=50ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-89857&p=1&ps=500 | time=49ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-56565&p=1&ps=500 | time=121ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-00094&p=1&ps=500 | time=73ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-51195&p=1&ps=500 | time=37ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=pli-sonarqube-way-13968&p=1&ps=500 | time=16ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-31768&p=1&ps=500 | time=41ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-65112&p=1&ps=500 | time=23ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=vbnet-sonar-way-92369&p=1&ps=500 | time=22ms
INFO: Load active rules (done) | time=607ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck testr
INFO: Language is forced to cpp
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=233ms
INFO: Load server rules (done) | time=254ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language PL/I were converted to sonar.lang.patterns.pli : **/*.pli
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language Visual Basic .NET were converted to sonar.lang.patterns.vbnet : **/*.vb
DEBUG: Declared extensions of language ABAP were converted to sonar.lang.patterns.abap : **/*.abap,**/*.ab4,**/*.flow
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/RandDemo.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
INFO: 3 files indexed
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,pli,vbnet,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=10ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=4ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


INFO: 2 compilation units analyzed
INFO: PPH: 124 files, 4429423 bytes, 13 hits, 137 queries
INFO: Sensor SquidSensorCpp (done) | time=5177ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=53ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=0ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdEngine is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/RandDemo.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Detection of duplications for [moduleKey=cppchecktest, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Detection of duplications for [moduleKey=cppchecktest, relative=src/RandDemo.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Detection of duplications for [moduleKey=cppchecktest, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=28ms
INFO: Analysis report generated in 48ms, dir size=53 KB
INFO: Analysis reports compressed in 12ms, zip size=20 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktest&projectName=C%2B%2B%20cppcheck%20testr | time=19ms
INFO: Analysis report uploaded in 20ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktest
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSUqBN_V_epFaDr75kJ
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 9.578s
INFO: Final Memory: 67M/929M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load global repositories
INFO: Load global repositories (done) | time=106ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
INFO: Load plugins index (done) | time=4ms
INFO: SonarQube server 5.3
INFO: Default locale: "en_US", source code encoding: "UTF-8"
INFO: Process project properties
INFO: Load project repositories
INFO: Load project repositories (done) | time=99ms
INFO: Apply project exclusions
INFO: Load quality profiles
INFO: Load quality profiles (done) | time=20ms
INFO: Load active rules
INFO: Load active rules (done) | time=619ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
INFO: -------------  Scan C++ cppcheck testr
INFO: Language is forced to cpp
INFO: Load server rules
INFO: Load server rules (done) | time=271ms
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
INFO: 3 files indexed
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor
INFO: Sensor Lines Sensor (done) | time=9ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=4ms
INFO: Sensor SquidSensorCpp
INFO: C/C++ Preprocessor in silent mode. Relaunch the analysis with "sonar.verbose=true" to see issues encountered by the preprocessor.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


INFO: 2 compilation units analyzed
INFO: PPH: 124 files, 4429423 bytes, 13 hits, 137 queries
INFO: Sensor SquidSensorCpp (done) | time=5090ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=65ms
INFO: Sensor SCM Sensor
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (done) | time=0ms
INFO: Sensor Code Colorizer Sensor
INFO: Sensor Code Colorizer Sensor (done) | time=0ms
INFO: Sensor CPD Sensor
INFO: DefaultCpdEngine is used for cpp
INFO: Sensor CPD Sensor (done) | time=37ms
INFO: Analysis report generated in 64ms, dir size=49 KB
INFO: Analysis reports compressed in 13ms, zip size=19 KB
INFO: Analysis report uploaded in 21ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktest
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSUr3ZEV_epFaDr75kN
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 9.745s
INFO: Final Memory: 66M/898M
INFO: ------------------------------------------------------------------------
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=61ms
INFO: Load global repositories (done) | time=135ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=2ms
INFO: Load plugins index (done) | time=4ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=70ms
DEBUG: API compatibility mode is enabled on plugin Cobertura [cobertura] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/I [pli] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin VB.NET [vbnet] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin ABAP [abap] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.9 (devcockpit)
DEBUG:   * Cobertura 1.6.3 (cobertura)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * PL/I 1.3.1 (pli)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * VB.NET 2.4 (vbnet)
DEBUG:   * ABAP 3.2.1 (abap)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.3
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: Process project properties
DEBUG: Process project properties (done) | time=2ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.3/projects/cppchecktest
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktest | time=13ms
INFO: Load project repositories (done) | time=99ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * PL/I => "pli"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * Visual Basic .NET => "vbnet"
DEBUG:   * ABAP => "abap"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktest | time=16ms
INFO: Load quality profiles (done) | time=20ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=abap-sonar-way-51499&p=1&ps=500 | time=36ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-80180&p=1&ps=500 | time=46ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-92064&p=1&ps=500 | time=30ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-89857&p=1&ps=500 | time=52ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-56565&p=1&ps=500 | time=99ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-00094&p=1&ps=500 | time=76ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-51195&p=1&ps=500 | time=45ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=pli-sonarqube-way-13968&p=1&ps=500 | time=18ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-31768&p=1&ps=500 | time=52ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-65112&p=1&ps=500 | time=24ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=vbnet-sonar-way-92369&p=1&ps=500 | time=31ms
INFO: Load active rules (done) | time=614ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck testr
INFO: Language is forced to cpp
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=285ms
INFO: Load server rules (done) | time=308ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language PL/I were converted to sonar.lang.patterns.pli : **/*.pli
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language Visual Basic .NET were converted to sonar.lang.patterns.vbnet : **/*.vb
DEBUG: Declared extensions of language ABAP were converted to sonar.lang.patterns.abap : **/*.abap,**/*.ab4,**/*.flow
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/RandDemo.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
INFO: 3 files indexed
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,pli,vbnet,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=11ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=5ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


INFO: 2 compilation units analyzed
INFO: PPH: 124 files, 4429423 bytes, 13 hits, 137 queries
INFO: Sensor SquidSensorCpp (done) | time=5650ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=66ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=0ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdEngine is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/RandDemo.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Detection of duplications for [moduleKey=cppchecktest, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Detection of duplications for [moduleKey=cppchecktest, relative=src/RandDemo.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Detection of duplications for [moduleKey=cppchecktest, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=35ms
INFO: Analysis report generated in 65ms, dir size=53 KB
INFO: Analysis reports compressed in 13ms, zip size=20 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktest&projectName=C%2B%2B%20cppcheck%20testr | time=20ms
INFO: Analysis report uploaded in 29ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktest
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSUsKJTV_epFaDr75kR
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 10.040s
INFO: Final Memory: 66M/873M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=48ms
INFO: Load global repositories (done) | time=108ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=2ms
INFO: Load plugins index (done) | time=3ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=61ms
DEBUG: API compatibility mode is enabled on plugin Cobertura [cobertura] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/I [pli] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin VB.NET [vbnet] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin ABAP [abap] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.9 (devcockpit)
DEBUG:   * Cobertura 1.6.3 (cobertura)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * PL/I 1.3.1 (pli)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * VB.NET 2.4 (vbnet)
DEBUG:   * ABAP 3.2.1 (abap)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.3
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: Process project properties
DEBUG: Process project properties (done) | time=3ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.3/projects/cppchecktest
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktest | time=15ms
INFO: Load project repositories (done) | time=76ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * PL/I => "pli"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * Visual Basic .NET => "vbnet"
DEBUG:   * ABAP => "abap"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktest | time=18ms
INFO: Load quality profiles (done) | time=22ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=abap-sonar-way-51499&p=1&ps=500 | time=25ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-80180&p=1&ps=500 | time=40ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-92064&p=1&ps=500 | time=28ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-89857&p=1&ps=500 | time=48ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-56565&p=1&ps=500 | time=87ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-00094&p=1&ps=500 | time=59ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-51195&p=1&ps=500 | time=40ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=pli-sonarqube-way-13968&p=1&ps=500 | time=17ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-31768&p=1&ps=500 | time=40ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-65112&p=1&ps=500 | time=33ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=vbnet-sonar-way-92369&p=1&ps=500 | time=19ms
INFO: Load active rules (done) | time=529ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck testr
INFO: Language is forced to cpp
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=258ms
INFO: Load server rules (done) | time=283ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language PL/I were converted to sonar.lang.patterns.pli : **/*.pli
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language Visual Basic .NET were converted to sonar.lang.patterns.vbnet : **/*.vb
DEBUG: Declared extensions of language ABAP were converted to sonar.lang.patterns.abap : **/*.abap,**/*.ab4,**/*.flow
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/RandDemo.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
INFO: 3 files indexed
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,pli,vbnet,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=11ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=3ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=62ms
INFO: Load global repositories (done) | time=125ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=2ms
INFO: Load plugins index (done) | time=3ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=55ms
DEBUG: API compatibility mode is enabled on plugin Cobertura [cobertura] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/I [pli] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin VB.NET [vbnet] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin ABAP [abap] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.9 (devcockpit)
DEBUG:   * Cobertura 1.6.3 (cobertura)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * PL/I 1.3.1 (pli)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * VB.NET 2.4 (vbnet)
DEBUG:   * ABAP 3.2.1 (abap)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.3
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: Process project properties
DEBUG: Process project properties (done) | time=2ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.3/projects/cppchecktest
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktest | time=15ms
INFO: Load project repositories (done) | time=75ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * PL/I => "pli"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * Visual Basic .NET => "vbnet"
DEBUG:   * ABAP => "abap"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktest | time=17ms
INFO: Load quality profiles (done) | time=23ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=abap-sonar-way-51499&p=1&ps=500 | time=25ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-80180&p=1&ps=500 | time=36ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-92064&p=1&ps=500 | time=27ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-89857&p=1&ps=500 | time=38ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-56565&p=1&ps=500 | time=82ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-00094&p=1&ps=500 | time=68ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-51195&p=1&ps=500 | time=34ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=pli-sonarqube-way-13968&p=1&ps=500 | time=15ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-31768&p=1&ps=500 | time=39ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-65112&p=1&ps=500 | time=23ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=vbnet-sonar-way-92369&p=1&ps=500 | time=18ms
INFO: Load active rules (done) | time=495ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck testr
INFO: Language is forced to cpp
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=236ms
INFO: Load server rules (done) | time=260ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language PL/I were converted to sonar.lang.patterns.pli : **/*.pli
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language Visual Basic .NET were converted to sonar.lang.patterns.vbnet : **/*.vb
DEBUG: Declared extensions of language ABAP were converted to sonar.lang.patterns.abap : **/*.abap,**/*.ab4,**/*.flow
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/RandDemo.cpp' is detected to be 'cpp'
INFO: 3 files indexed
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,pli,vbnet,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=12ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=4ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


INFO: 2 compilation units analyzed
INFO: PPH: 124 files, 4429423 bytes, 13 hits, 137 queries
INFO: Sensor SquidSensorCpp (done) | time=5245ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=55ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=1ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=0ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdEngine is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/RandDemo.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Detection of duplications for [moduleKey=cppchecktest, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Detection of duplications for [moduleKey=cppchecktest, relative=src/RandDemo.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Detection of duplications for [moduleKey=cppchecktest, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=28ms
INFO: Analysis report generated in 49ms, dir size=53 KB
INFO: Analysis reports compressed in 14ms, zip size=20 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktest&projectName=C%2B%2B%20cppcheck%20testr | time=19ms
INFO: Analysis report uploaded in 20ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktest
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSUsgLiV_epFaDr75kV
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 9.079s
INFO: Final Memory: 65M/852M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=46ms
INFO: Load global repositories (done) | time=112ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=2ms
INFO: Load plugins index (done) | time=4ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=57ms
DEBUG: API compatibility mode is enabled on plugin Cobertura [cobertura] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/I [pli] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin VB.NET [vbnet] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin ABAP [abap] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.9 (devcockpit)
DEBUG:   * Cobertura 1.6.3 (cobertura)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * PL/I 1.3.1 (pli)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * VB.NET 2.4 (vbnet)
DEBUG:   * ABAP 3.2.1 (abap)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.3
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: Process project properties
DEBUG: Process project properties (done) | time=2ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.3/projects/cppchecktest
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktest | time=14ms
INFO: Load project repositories (done) | time=77ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * PL/I => "pli"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * Visual Basic .NET => "vbnet"
DEBUG:   * ABAP => "abap"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktest | time=17ms
INFO: Load quality profiles (done) | time=22ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=abap-sonar-way-51499&p=1&ps=500 | time=25ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-80180&p=1&ps=500 | time=37ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-92064&p=1&ps=500 | time=27ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-89857&p=1&ps=500 | time=39ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-56565&p=1&ps=500 | time=81ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-00094&p=1&ps=500 | time=67ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-51195&p=1&ps=500 | time=33ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=pli-sonarqube-way-13968&p=1&ps=500 | time=15ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-31768&p=1&ps=500 | time=38ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-65112&p=1&ps=500 | time=22ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=vbnet-sonar-way-92369&p=1&ps=500 | time=20ms
INFO: Load active rules (done) | time=491ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck testr
INFO: Language is forced to cpp
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=272ms
INFO: Load server rules (done) | time=294ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language PL/I were converted to sonar.lang.patterns.pli : **/*.pli
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language Visual Basic .NET were converted to sonar.lang.patterns.vbnet : **/*.vb
DEBUG: Declared extensions of language ABAP were converted to sonar.lang.patterns.abap : **/*.abap,**/*.ab4,**/*.flow
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
INFO: 2 files indexed
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,pli,vbnet,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=10ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=3ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


INFO: 2 compilation units analyzed
INFO: PPH: 124 files, 4429423 bytes, 13 hits, 137 queries
INFO: Sensor SquidSensorCpp (done) | time=5165ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=51ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=0ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdEngine is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Detection of duplications for [moduleKey=cppchecktest, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Detection of duplications for [moduleKey=cppchecktest, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=17ms
INFO: Analysis report generated in 40ms, dir size=50 KB
INFO: Analysis reports compressed in 11ms, zip size=18 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktest&projectName=C%2B%2B%20cppcheck%20testr | time=17ms
INFO: Analysis report uploaded in 19ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktest
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSUtRrTV_epFaDr75kZ
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 9.490s
INFO: Final Memory: 67M/928M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load global repositories
INFO: Load global repositories (done) | time=122ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
INFO: Load plugins index (done) | time=3ms
INFO: SonarQube server 5.3
INFO: Default locale: "en_US", source code encoding: "UTF-8"
INFO: Process project properties
INFO: Load project repositories
INFO: Load project repositories (done) | time=89ms
INFO: Apply project exclusions
INFO: Load quality profiles
INFO: Load quality profiles (done) | time=21ms
INFO: Load active rules
INFO: Load active rules (done) | time=513ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
INFO: -------------  Scan C++ cppcheck testr
INFO: Language is forced to cpp
INFO: Load server rules
INFO: Load server rules (done) | time=288ms
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
INFO: 2 files indexed
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor
INFO: Sensor Lines Sensor (done) | time=11ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=3ms
INFO: Sensor SquidSensorCpp
INFO: C/C++ Preprocessor in silent mode. Relaunch the analysis with "sonar.verbose=true" to see issues encountered by the preprocessor.
INFO: build-wrapper output is not used to analyse this project. This may result in false-positives and false-negatives.
INFO: Parsing based on 'c++11' standard.
INFO: 2 source files to be analyzed
INFO: 2/2 source files analyzed
INFO: PPH: 0 files, 0 bytes, 0 hits, 0 queries
INFO: Sensor SquidSensorCpp (done) | time=970ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=66ms
INFO: Sensor SCM Sensor
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (done) | time=0ms
INFO: Sensor Code Colorizer Sensor
INFO: Sensor Code Colorizer Sensor (done) | time=0ms
INFO: Sensor CPD Sensor
INFO: DefaultCpdEngine is used for cpp
INFO: Sensor CPD Sensor (done) | time=17ms
INFO: Analysis report generated in 51ms, dir size=46 KB
INFO: Analysis reports compressed in 10ms, zip size=17 KB
INFO: Analysis report uploaded in 20ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktest
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSUtuxOV_epFaDr75kd
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 5.498s
INFO: Final Memory: 61M/473M
INFO: ------------------------------------------------------------------------
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Download http://localhost:9000/batch/sonar-batch-shaded-5.4.jar to /Users/Olivier/.sonar/cache/_tmp/fileCache4916940259806237996.tmp
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=130ms
INFO: Load global repositories (done) | time=206ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=4ms
INFO: Load plugins index (done) | time=5ms
DEBUG: Load plugins
DEBUG: Download plugin sonar-dev-cockpit-plugin-1.10.jar to /Users/Olivier/.sonar/cache/_tmp/fileCache1582906109636043497.tmp
DEBUG: GET 200 http://localhost:9000/deploy/plugins/devcockpit/sonar-dev-cockpit-plugin-1.10.jar | time=3ms
DEBUG: Download plugin sonar-github-plugin-1.2.jar to /Users/Olivier/.sonar/cache/_tmp/fileCache4481309439257521675.tmp
DEBUG: GET 200 http://localhost:9000/deploy/plugins/github/sonar-github-plugin-1.2.jar | time=3ms
DEBUG: Download plugin sonar-javascript-plugin-2.12.jar to /Users/Olivier/.sonar/cache/_tmp/fileCache8958951094714045582.tmp
DEBUG: GET 200 http://localhost:9000/deploy/plugins/javascript/sonar-javascript-plugin-2.12.jar | time=2ms
DEBUG: Download plugin sonar-php-plugin-2.8.jar to /Users/Olivier/.sonar/cache/_tmp/fileCache1751714938597584238.tmp
DEBUG: GET 200 http://localhost:9000/deploy/plugins/php/sonar-php-plugin-2.8.jar | time=1ms
DEBUG: Download plugin sonar-generic-coverage-plugin-1.2.jar to /Users/Olivier/.sonar/cache/_tmp/fileCache7325957049179309947.tmp
DEBUG: GET 200 http://localhost:9000/deploy/plugins/genericcoverage/sonar-generic-coverage-plugin-1.2.jar | time=1ms
DEBUG: Load plugins (done) | time=208ms
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin GitHub [github] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin JavaScript [javascript] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PHP [php] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.10 (devcockpit)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * GitHub 1.2 (github)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * JavaScript 2.12 (javascript)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * PHP 2.8 (php)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.4
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: report plugin licensed to developers, EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=3ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.4/projects/cppchecktest
INFO: Load project repositories
DEBUG: GET 404 http://localhost:9000/batch/project.protobuf?key=cppchecktest | time=22ms
DEBUG: Project repository not available - continuing without it
INFO: Load project repositories (done) | time=30ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=0ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * JavaScript => "js"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * PHP => "php"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?defaults=true | time=76ms
INFO: Load quality profiles (done) | time=99ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-70166&p=1&ps=500 | time=282ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-86774&p=1&ps=500 | time=127ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-35849&p=1&ps=500 | time=163ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-00039&p=1&ps=500 | time=103ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-88769&p=1&ps=500 | time=160ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-52844&p=1&ps=500 | time=85ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-69808&p=1&ps=500 | time=85ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=php-sonar-way-31354&p=1&ps=500 | time=59ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-98508&p=1&ps=500 | time=92ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-20477&p=1&ps=500 | time=47ms
INFO: Load active rules (done) | time=1354ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck testr
INFO: Language is forced to cpp
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=266ms
INFO: Load server rules (done) | time=287ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language PHP were converted to sonar.lang.patterns.php : **/*.php,**/*.php3,**/*.php4,**/*.php5,**/*.phtml,**/*.inc
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
INFO: 2 files indexed
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=11ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=4ms
INFO: Sensor SquidSensorCpp
INFO: build-wrapper output is not used to analyse this project. This may result in false-positives and false-negatives.
INFO: Parsing based on 'c++11' standard.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: 2 source files to be analyzed
DEBUG: 'iostream' file not found
DEBUG: 'iostream' file not found
INFO: 2/2 source files analyzed
INFO: PPH: 0 files, 0 bytes, 0 hits, 0 queries
INFO: Sensor SquidSensorCpp (done) | time=1089ms
INFO: Sensor Cppcheck
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
DEBUG: Couldn't delete lock file: /Users/Olivier/test/cppCheck/.sonar_lock java.nio.file.NoSuchFileException: /Users/Olivier/test/cppCheck/.sonar_lock
	at sun.nio.fs.UnixException.translateToIOException(UnixException.java:86)
	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:102)
	at sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:107)
	at sun.nio.fs.UnixFileSystemProvider.implDelete(UnixFileSystemProvider.java:244)
	at sun.nio.fs.AbstractFileSystemProvider.delete(AbstractFileSystemProvider.java:103)
	at java.nio.file.Files.delete(Files.java:1126)
	at org.sonar.home.cache.DirectoryLock.unlock(DirectoryLock.java:98)
	at org.sonar.batch.scan.ProjectLock.stop(ProjectLock.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.picocontainer.lifecycle.ReflectionLifecycleStrategy.invokeMethod(ReflectionLifecycleStrategy.java:110)
	at org.picocontainer.lifecycle.ReflectionLifecycleStrategy.stop(ReflectionLifecycleStrategy.java:96)
	at org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.stop(AbstractInjectionFactory.java:88)
	at org.picocontainer.behaviors.AbstractBehavior.stop(AbstractBehavior.java:179)
	at org.picocontainer.behaviors.Stored$RealComponentLifecycle.stop(Stored.java:141)
	at org.picocontainer.behaviors.Stored.stop(Stored.java:118)
	at org.picocontainer.DefaultPicoContainer.stopAdapters(DefaultPicoContainer.java:1048)
	at org.picocontainer.DefaultPicoContainer.stop(DefaultPicoContainer.java:803)
	at org.sonar.core.platform.ComponentContainer.stopComponents(ComponentContainer.java:166)
	at org.sonar.core.platform.ComponentContainer.execute(ComponentContainer.java:123)
	at org.sonar.batch.task.ScanTask.execute(ScanTask.java:55)
	at org.sonar.batch.task.TaskContainer.doAfterStart(TaskContainer.java:86)
	at org.sonar.core.platform.ComponentContainer.startComponents(ComponentContainer.java:135)
	at org.sonar.core.platform.ComponentContainer.execute(ComponentContainer.java:120)
	at org.sonar.batch.bootstrap.GlobalContainer.executeTask(GlobalContainer.java:122)
	at org.sonar.batch.bootstrapper.Batch.executeTask(Batch.java:119)
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60)
	at com.sun.proxy.$Proxy0.execute(Unknown Source)
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:240)
	at org.sonarsource.scanner.api.EmbeddedScanner.runAnalysis(EmbeddedScanner.java:151)
	at org.sonarsource.scanner.cli.Main.runAnalysis(Main.java:110)
	at org.sonarsource.scanner.cli.Main.execute(Main.java:72)
	at org.sonarsource.scanner.cli.Main.main(Main.java:60)

INFO: ------------------------------------------------------------------------
INFO: EXECUTION FAILURE
INFO: ------------------------------------------------------------------------
INFO: Total time: 7.398s
INFO: Final Memory: 57M/425M
INFO: ------------------------------------------------------------------------
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=70ms
INFO: Load global repositories (done) | time=149ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=3ms
INFO: Load plugins index (done) | time=4ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=65ms
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin GitHub [github] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin JavaScript [javascript] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PHP [php] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.10 (devcockpit)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * GitHub 1.2 (github)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * JavaScript 2.12 (javascript)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * PHP 2.8 (php)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.4
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: report plugin licensed to developers, EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=2ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.4/projects/cppchecktest
INFO: Load project repositories
DEBUG: GET 404 http://localhost:9000/batch/project.protobuf?key=cppchecktest | time=13ms
DEBUG: Project repository not available - continuing without it
INFO: Load project repositories (done) | time=20ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=1ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * JavaScript => "js"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * PHP => "php"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?defaults=true | time=24ms
INFO: Load quality profiles (done) | time=46ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-70166&p=1&ps=500 | time=79ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-86774&p=1&ps=500 | time=48ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-35849&p=1&ps=500 | time=90ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-00039&p=1&ps=500 | time=79ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-88769&p=1&ps=500 | time=112ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-52844&p=1&ps=500 | time=72ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-69808&p=1&ps=500 | time=86ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=php-sonar-way-31354&p=1&ps=500 | time=59ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-98508&p=1&ps=500 | time=73ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-20477&p=1&ps=500 | time=40ms
INFO: Load active rules (done) | time=888ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck testr
INFO: Language is forced to cpp
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=237ms
INFO: Load server rules (done) | time=257ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language PHP were converted to sonar.lang.patterns.php : **/*.php,**/*.php3,**/*.php4,**/*.php5,**/*.phtml,**/*.inc
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
INFO: 2 files indexed
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=10ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=3ms
INFO: Sensor SquidSensorCpp
INFO: build-wrapper output is not used to analyse this project. This may result in false-positives and false-negatives.
INFO: Parsing based on 'c++11' standard.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: 2 source files to be analyzed
DEBUG: 'iostream' file not found
DEBUG: 'iostream' file not found
INFO: 2/2 source files analyzed
INFO: PPH: 0 files, 0 bytes, 0 hits, 0 queries
INFO: Sensor SquidSensorCpp (done) | time=1021ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=70ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=0ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdIndexer is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=9ms
DEBUG: Detection of duplications for cppchecktest:src/SimpleClass.cpp
INFO: Analysis report generated in 58ms, dir size=41 KB
INFO: Analysis reports compressed in 11ms, zip size=15 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktest&projectName=C%2B%2B%20cppcheck%20testr | time=121ms
INFO: Analysis report uploaded in 124ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktest
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSUvMfypsBLB0HBir5G
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 5.864s
INFO: Final Memory: 69M/625M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=67ms
INFO: Load global repositories (done) | time=146ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=2ms
INFO: Load plugins index (done) | time=4ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=63ms
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin GitHub [github] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin JavaScript [javascript] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PHP [php] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.10 (devcockpit)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * GitHub 1.2 (github)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * JavaScript 2.12 (javascript)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * PHP 2.8 (php)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.4
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: report plugin licensed to developers, EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=3ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.4/projects/cppchecktest
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktest | time=42ms
INFO: Load project repositories (done) | time=128ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=1ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * JavaScript => "js"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * PHP => "php"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktest | time=19ms
INFO: Load quality profiles (done) | time=24ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-70166&p=1&ps=500 | time=72ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-86774&p=1&ps=500 | time=52ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-35849&p=1&ps=500 | time=183ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-00039&p=1&ps=500 | time=74ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-88769&p=1&ps=500 | time=144ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-52844&p=1&ps=500 | time=67ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-69808&p=1&ps=500 | time=67ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=php-sonar-way-31354&p=1&ps=500 | time=49ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-98508&p=1&ps=500 | time=92ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-20477&p=1&ps=500 | time=38ms
INFO: Load active rules (done) | time=962ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck testr
INFO: Language is forced to cpp
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=261ms
INFO: Load server rules (done) | time=282ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language PHP were converted to sonar.lang.patterns.php : **/*.php,**/*.php3,**/*.php4,**/*.php5,**/*.phtml,**/*.inc
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
INFO: 2 files indexed
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=10ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=3ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


INFO: 2 compilation units analyzed
INFO: PPH: 124 files, 4429423 bytes, 13 hits, 137 queries
INFO: Sensor SquidSensorCpp (done) | time=5133ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=67ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=0ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdIndexer is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=6ms
DEBUG: Detection of duplications for cppchecktest:src/SimpleClass.cpp
INFO: Analysis report generated in 55ms, dir size=54 KB
INFO: Analysis reports compressed in 11ms, zip size=19 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktest&projectName=C%2B%2B%20cppcheck%20testr | time=33ms
INFO: Analysis report uploaded in 36ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktest
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSUv-g6psBLB0HBir--
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 10.397s
INFO: Final Memory: 71M/1101M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=65ms
INFO: Load global repositories (done) | time=140ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=3ms
INFO: Load plugins index (done) | time=4ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=62ms
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin GitHub [github] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin JavaScript [javascript] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PHP [php] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.10 (devcockpit)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * GitHub 1.2 (github)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * JavaScript 2.12 (javascript)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * PHP 2.8 (php)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.4
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: report plugin licensed to developers, EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=2ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.4/projects/cppchecktest
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktest | time=17ms
INFO: Load project repositories (done) | time=92ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=1ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * JavaScript => "js"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * PHP => "php"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktest | time=20ms
INFO: Load quality profiles (done) | time=24ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-70166&p=1&ps=500 | time=56ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-86774&p=1&ps=500 | time=52ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-35849&p=1&ps=500 | time=84ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-00039&p=1&ps=500 | time=58ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-88769&p=1&ps=500 | time=115ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-52844&p=1&ps=500 | time=68ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-69808&p=1&ps=500 | time=86ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=php-sonar-way-31354&p=1&ps=500 | time=51ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-98508&p=1&ps=500 | time=71ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-20477&p=1&ps=500 | time=24ms
INFO: Load active rules (done) | time=763ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck testr
INFO: Language is forced to cpp
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=276ms
INFO: Load server rules (done) | time=298ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language PHP were converted to sonar.lang.patterns.php : **/*.php,**/*.php3,**/*.php4,**/*.php5,**/*.phtml,**/*.inc
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
INFO: 2 files indexed
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=10ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=3ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


INFO: 2 compilation units analyzed
INFO: PPH: 124 files, 4429423 bytes, 13 hits, 137 queries
INFO: Sensor SquidSensorCpp (done) | time=5364ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=77ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=1ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdIndexer is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktest, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=7ms
DEBUG: Detection of duplications for cppchecktest:src/SimpleClass.cpp
INFO: Analysis report generated in 53ms, dir size=40 KB
INFO: Analysis reports compressed in 12ms, zip size=15 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktest&projectName=C%2B%2B%20cppcheck%20testr | time=19ms
INFO: Analysis report uploaded in 22ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktest
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSUw6hJpsBLB0HBisEk
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 10.462s
INFO: Final Memory: 73M/1204M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=61ms
INFO: Load global repositories (done) | time=135ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=2ms
INFO: Load plugins index (done) | time=4ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=63ms
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin GitHub [github] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin JavaScript [javascript] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PHP [php] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.10 (devcockpit)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * GitHub 1.2 (github)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * JavaScript 2.12 (javascript)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * PHP 2.8 (php)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.4
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: report plugin licensed to developers, EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=2ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.4/projects/cppchecktestunusedfunction
INFO: Load project repositories
DEBUG: GET 404 http://localhost:9000/batch/project.protobuf?key=cppchecktestunusedfunction | time=10ms
DEBUG: Project repository not available - continuing without it
INFO: Load project repositories (done) | time=17ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=0ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * JavaScript => "js"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * PHP => "php"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?defaults=true | time=13ms
INFO: Load quality profiles (done) | time=29ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-70166&p=1&ps=500 | time=63ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-86774&p=1&ps=500 | time=41ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-35849&p=1&ps=500 | time=65ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-00039&p=1&ps=500 | time=63ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-88769&p=1&ps=500 | time=100ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-52844&p=1&ps=500 | time=55ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-69808&p=1&ps=500 | time=70ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=php-sonar-way-31354&p=1&ps=500 | time=44ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-98508&p=1&ps=500 | time=66ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-20477&p=1&ps=500 | time=25ms
INFO: Load active rules (done) | time=766ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck unused function
INFO: Language is forced to cpp
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=241ms
INFO: Load server rules (done) | time=266ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language PHP were converted to sonar.lang.patterns.php : **/*.php,**/*.php3,**/*.php4,**/*.php5,**/*.phtml,**/*.inc
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
INFO: 2 files indexed
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=14ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=4ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


INFO: 2 compilation units analyzed
INFO: PPH: 124 files, 4429423 bytes, 13 hits, 137 queries
INFO: Sensor SquidSensorCpp (done) | time=5904ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=85ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=1ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdIndexer is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=8ms
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.cpp
INFO: Analysis report generated in 61ms, dir size=40 KB
INFO: Analysis reports compressed in 12ms, zip size=15 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktestunusedfunction&projectName=C%2B%2B%20cppcheck%20unused%20function | time=64ms
INFO: Analysis report uploaded in 65ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktestunusedfunction
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSUxLnfpsBLB0HBisEp
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 10.575s
INFO: Final Memory: 72M/1147M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=54ms
INFO: Load global repositories (done) | time=122ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=2ms
INFO: Load plugins index (done) | time=4ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=79ms
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin GitHub [github] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin JavaScript [javascript] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PHP [php] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.10 (devcockpit)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * GitHub 1.2 (github)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * JavaScript 2.12 (javascript)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * PHP 2.8 (php)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.4
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: report plugin licensed to developers, EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=3ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.4/projects/cppchecktestunusedfunction
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktestunusedfunction | time=19ms
INFO: Load project repositories (done) | time=97ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=0ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * JavaScript => "js"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * PHP => "php"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktestunusedfunction | time=19ms
INFO: Load quality profiles (done) | time=25ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-70166&p=1&ps=500 | time=67ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-86774&p=1&ps=500 | time=44ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-35849&p=1&ps=500 | time=57ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-00039&p=1&ps=500 | time=54ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-88769&p=1&ps=500 | time=102ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-52844&p=1&ps=500 | time=45ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-69808&p=1&ps=500 | time=61ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=php-sonar-way-31354&p=1&ps=500 | time=30ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-98508&p=1&ps=500 | time=48ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-20477&p=1&ps=500 | time=25ms
INFO: Load active rules (done) | time=656ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck unused function
INFO: Language is forced to cpp
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=254ms
INFO: Load server rules (done) | time=282ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp,**/*.h
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language PHP were converted to sonar.lang.patterns.php : **/*.php,**/*.php3,**/*.php4,**/*.php5,**/*.phtml,**/*.inc
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.h' is detected to be 'cpp'
INFO: 3 files indexed
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=11ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=5ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


INFO: 2 compilation units analyzed
INFO: PPH: 124 files, 4429423 bytes, 13 hits, 137 queries
INFO: Sensor SquidSensorCpp (done) | time=6178ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=75ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=1ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdIndexer is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.h, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=9ms
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.h
INFO: Analysis report generated in 54ms, dir size=41 KB
INFO: Analysis reports compressed in 13ms, zip size=17 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktestunusedfunction&projectName=C%2B%2B%20cppcheck%20unused%20function | time=19ms
INFO: Analysis report uploaded in 23ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktestunusedfunction
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSU42-fpsBLB0HBisFD
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 11.602s
INFO: Final Memory: 72M/1182M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=56ms
INFO: Load global repositories (done) | time=126ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=2ms
INFO: Load plugins index (done) | time=3ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=63ms
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin GitHub [github] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin JavaScript [javascript] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PHP [php] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.10 (devcockpit)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * GitHub 1.2 (github)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * JavaScript 2.12 (javascript)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * PHP 2.8 (php)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.4
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: report plugin licensed to developers, EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=2ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.4/projects/cppchecktestunusedfunction
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktestunusedfunction | time=16ms
INFO: Load project repositories (done) | time=104ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=0ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * JavaScript => "js"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * PHP => "php"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktestunusedfunction | time=16ms
INFO: Load quality profiles (done) | time=21ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-70166&p=1&ps=500 | time=58ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-86774&p=1&ps=500 | time=33ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-35849&p=1&ps=500 | time=53ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-00039&p=1&ps=500 | time=46ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-88769&p=1&ps=500 | time=81ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-52844&p=1&ps=500 | time=36ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-69808&p=1&ps=500 | time=44ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=php-sonar-way-31354&p=1&ps=500 | time=32ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-98508&p=1&ps=500 | time=52ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-20477&p=1&ps=500 | time=28ms
INFO: Load active rules (done) | time=570ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck unused function
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=234ms
INFO: Load server rules (done) | time=259ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language PHP were converted to sonar.lang.patterns.php : **/*.php,**/*.php3,**/*.php4,**/*.php5,**/*.phtml,**/*.inc
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.h' is detected to be 'c'
INFO: 3 files indexed
INFO: Quality profile for c: Sonar way
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorC -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=12ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=4ms
INFO: Sensor SquidSensorC
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
INFO: CFG: peak memory consumption: 0 entries
INFO: PPH: 0 files, 0 bytes, 0 hits, 0 queries
INFO: 0 compilation units analyzed
INFO: Sensor SquidSensorC (done) | time=992ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


INFO: 2 compilation units analyzed
INFO: PPH: 124 files, 4429423 bytes, 13 hits, 137 queries
INFO: Sensor SquidSensorCpp (done) | time=5330ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=77ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=1ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=0ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdIndexer is used for c
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.h, basedir=/Users/Olivier/test/cppCheck]
INFO: DefaultCpdIndexer is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=9ms
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.h
INFO: Analysis report generated in 58ms, dir size=41 KB
INFO: Analysis reports compressed in 12ms, zip size=16 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktestunusedfunction&projectName=C%2B%2B%20cppcheck%20unused%20function | time=19ms
INFO: Analysis report uploaded in 24ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktestunusedfunction
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSU5a6epsBLB0HBisFJ
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 11.478s
INFO: Final Memory: 70M/1098M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=53ms
INFO: Load global repositories (done) | time=115ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=2ms
INFO: Load plugins index (done) | time=3ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=59ms
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin GitHub [github] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin JavaScript [javascript] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PHP [php] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.10 (devcockpit)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * GitHub 1.2 (github)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * JavaScript 2.12 (javascript)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * PHP 2.8 (php)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.4
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: report plugin licensed to developers, EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=2ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.4/projects/cppchecktestunusedfunction
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktestunusedfunction | time=20ms
INFO: Load project repositories (done) | time=83ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=1ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * JavaScript => "js"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * PHP => "php"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktestunusedfunction | time=15ms
INFO: Load quality profiles (done) | time=20ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-70166&p=1&ps=500 | time=40ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-86774&p=1&ps=500 | time=32ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-35849&p=1&ps=500 | time=50ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-00039&p=1&ps=500 | time=39ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-88769&p=1&ps=500 | time=70ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-52844&p=1&ps=500 | time=35ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-69808&p=1&ps=500 | time=39ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=php-sonar-way-31354&p=1&ps=500 | time=26ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-98508&p=1&ps=500 | time=46ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-20477&p=1&ps=500 | time=22ms
INFO: Load active rules (done) | time=481ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck unused function
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=240ms
INFO: Load server rules (done) | time=263ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language PHP were converted to sonar.lang.patterns.php : **/*.php,**/*.php3,**/*.php4,**/*.php5,**/*.phtml,**/*.inc
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass2.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.h' is detected to be 'c'
DEBUG: Language of file 'src/SimpleClass3.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass3.h' is detected to be 'c'
INFO: 6 files indexed
INFO: Quality profile for c: Sonar way
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorC -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=10ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=3ms
INFO: Sensor SquidSensorC
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
INFO: 0 compilation units analyzed
INFO: CFG: peak memory consumption: 0 entries
INFO: PPH: 0 files, 0 bytes, 0 hits, 0 queries
INFO: Sensor SquidSensorC (done) | time=794ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


DEBUG: '__cplusplus' macro redefined
DEBUG: '__cplusplus' macro redefined
INFO: 4 compilation units analyzed
INFO: PPH: 124 files, 4429423 bytes, 287 hits, 411 queries
INFO: Sensor SquidSensorCpp (done) | time=6602ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=85ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=1ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdIndexer is used for c
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.h, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass3.h, basedir=/Users/Olivier/test/cppCheck]
INFO: DefaultCpdIndexer is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass2.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass3.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=14ms
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass2.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass3.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.h
INFO: Analysis report generated in 55ms, dir size=50 KB
INFO: Analysis reports compressed in 17ms, zip size=23 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktestunusedfunction&projectName=C%2B%2B%20cppcheck%20unused%20function | time=21ms
INFO: Analysis report uploaded in 23ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktestunusedfunction
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSU8oKzpsBLB0HBisFN
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 12.154s
INFO: Final Memory: 70M/1064M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=52ms
INFO: Load global repositories (done) | time=115ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=2ms
INFO: Load plugins index (done) | time=3ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=53ms
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin GitHub [github] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin JavaScript [javascript] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PHP [php] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.10 (devcockpit)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * GitHub 1.2 (github)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * JavaScript 2.12 (javascript)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * PHP 2.8 (php)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.4
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: report plugin licensed to developers, EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=3ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.4/projects/cppchecktestunusedfunction
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktestunusedfunction | time=23ms
INFO: Load project repositories (done) | time=88ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=0ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * JavaScript => "js"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * PHP => "php"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktestunusedfunction | time=17ms
INFO: Load quality profiles (done) | time=23ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-70166&p=1&ps=500 | time=41ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-86774&p=1&ps=500 | time=34ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-35849&p=1&ps=500 | time=52ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-00039&p=1&ps=500 | time=40ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-88769&p=1&ps=500 | time=66ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-52844&p=1&ps=500 | time=32ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-69808&p=1&ps=500 | time=38ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=php-sonar-way-31354&p=1&ps=500 | time=26ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-98508&p=1&ps=500 | time=41ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-20477&p=1&ps=500 | time=23ms
INFO: Load active rules (done) | time=478ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck unused function
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=244ms
INFO: Load server rules (done) | time=266ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language PHP were converted to sonar.lang.patterns.php : **/*.php,**/*.php3,**/*.php4,**/*.php5,**/*.phtml,**/*.inc
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/Foo.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/Foo.h' is detected to be 'c'
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.h' is detected to be 'c'
DEBUG: Language of file 'src/SimpleClass2.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass3.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass3.h' is detected to be 'c'
INFO: 8 files indexed
INFO: Quality profile for c: Sonar way
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorC -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=11ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=4ms
INFO: Sensor SquidSensorC
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
INFO: 0 compilation units analyzed
INFO: CFG: peak memory consumption: 0 entries
INFO: PPH: 0 files, 0 bytes, 0 hits, 0 queries
INFO: Sensor SquidSensorC (done) | time=774ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/Foo.cpp at line 1: 

    1:  include "Foo.h"
               ^
    3:  class FooImpl {
    4:  public :
    5:  int bar ( Foo & ) ;
    6:  }
    8:  int FooImpl :: bar ( Foo & foo ) {
    9:  return foo . var ;
   10:  }


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


DEBUG: '__cplusplus' macro redefined
DEBUG: '__cplusplus' macro redefined
INFO: 5 compilation units analyzed
INFO: PPH: 124 files, 4429423 bytes, 287 hits, 411 queries
INFO: Sensor SquidSensorCpp (done) | time=6588ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=65ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=1ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdIndexer is used for c
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/Foo.h, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.h, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass3.h, basedir=/Users/Olivier/test/cppCheck]
INFO: DefaultCpdIndexer is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/Foo.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass2.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass3.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=14ms
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/Foo.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass2.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass3.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.h
INFO: Analysis report generated in 52ms, dir size=51 KB
INFO: Analysis reports compressed in 20ms, zip size=25 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktestunusedfunction&projectName=C%2B%2B%20cppcheck%20unused%20function | time=20ms
INFO: Analysis report uploaded in 21ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktestunusedfunction
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSU99TppsBLB0HBisGA
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 11.968s
INFO: Final Memory: 70M/1070M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=48ms
INFO: Load global repositories (done) | time=108ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=2ms
INFO: Load plugins index (done) | time=3ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=57ms
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin GitHub [github] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin JavaScript [javascript] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PHP [php] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.10 (devcockpit)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * GitHub 1.2 (github)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * JavaScript 2.12 (javascript)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * PHP 2.8 (php)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.4
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: report plugin licensed to developers, EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=2ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.4/projects/cppchecktestunusedfunction
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktestunusedfunction | time=17ms
INFO: Load project repositories (done) | time=80ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=0ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * JavaScript => "js"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * PHP => "php"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktestunusedfunction | time=16ms
INFO: Load quality profiles (done) | time=21ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-70166&p=1&ps=500 | time=47ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-86774&p=1&ps=500 | time=37ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-35849&p=1&ps=500 | time=54ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-00039&p=1&ps=500 | time=46ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-88769&p=1&ps=500 | time=85ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-52844&p=1&ps=500 | time=34ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-69808&p=1&ps=500 | time=38ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=php-sonar-way-31354&p=1&ps=500 | time=25ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-98508&p=1&ps=500 | time=48ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-20477&p=1&ps=500 | time=22ms
INFO: Load active rules (done) | time=532ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck unused function
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=242ms
INFO: Load server rules (done) | time=263ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language PHP were converted to sonar.lang.patterns.php : **/*.php,**/*.php3,**/*.php4,**/*.php5,**/*.phtml,**/*.inc
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/Foo.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/Foo.h' is detected to be 'c'
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.h' is detected to be 'c'
DEBUG: Language of file 'src/SimpleClass2.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass3.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass3.h' is detected to be 'c'
INFO: 8 files indexed
INFO: Quality profile for c: Sonar way
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorC -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=12ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=4ms
INFO: Sensor SquidSensorC
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
INFO: 0 compilation units analyzed
INFO: CFG: peak memory consumption: 0 entries
INFO: PPH: 0 files, 0 bytes, 0 hits, 0 queries
INFO: Sensor SquidSensorC (done) | time=808ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/Foo.h at line 15: 

    1:  class FooImpl ;
    3:  class Foo {
    4:  public :
    5:  int bar ( ) ;
    6:  friend class FooImpl ;
    7:  private :
    8:  int var ;
    9:  }
   15:  
       ^


INFO: Parse error in file /Users/Olivier/test/cppCheck/src/Foo.cpp at line 9: 

    3:  class FooImpl {
    4:  public :
    5:  int bar ( Foo & ) ;
    6:  }
    8:  int FooImpl :: bar ( Foo & foo ) {
    9:  return foo . var ;
       ^
   10:  }
   12:  int Foo :: bar ( ) {
   13:  return FooImpl :: bar ( * this ) ;
   14:  }
   15:  


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


DEBUG: '__cplusplus' macro redefined
DEBUG: '__cplusplus' macro redefined
INFO: 5 compilation units analyzed
INFO: PPH: 125 files, 4429449 bytes, 287 hits, 412 queries
INFO: Sensor SquidSensorCpp (done) | time=6828ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=69ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=0ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdIndexer is used for c
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/Foo.h, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.h, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass3.h, basedir=/Users/Olivier/test/cppCheck]
INFO: DefaultCpdIndexer is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/Foo.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass2.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass3.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=15ms
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/Foo.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass2.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass3.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.h
INFO: Analysis report generated in 52ms, dir size=51 KB
INFO: Analysis reports compressed in 22ms, zip size=25 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktestunusedfunction&projectName=C%2B%2B%20cppcheck%20unused%20function | time=22ms
INFO: Analysis report uploaded in 24ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktestunusedfunction
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSU_rjUpsBLB0HBisGG
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 12.229s
INFO: Final Memory: 70M/1059M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=56ms
INFO: Load global repositories (done) | time=118ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=2ms
INFO: Load plugins index (done) | time=3ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=53ms
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin GitHub [github] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin JavaScript [javascript] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PHP [php] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.10 (devcockpit)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * GitHub 1.2 (github)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * JavaScript 2.12 (javascript)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * PHP 2.8 (php)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.4
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: report plugin licensed to developers, EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=2ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.4/projects/cppchecktestunusedfunction
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktestunusedfunction | time=14ms
INFO: Load project repositories (done) | time=85ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=0ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * JavaScript => "js"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * PHP => "php"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktestunusedfunction | time=14ms
INFO: Load quality profiles (done) | time=19ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-70166&p=1&ps=500 | time=42ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-86774&p=1&ps=500 | time=30ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-35849&p=1&ps=500 | time=50ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-00039&p=1&ps=500 | time=43ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-88769&p=1&ps=500 | time=72ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-52844&p=1&ps=500 | time=32ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-69808&p=1&ps=500 | time=38ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=php-sonar-way-31354&p=1&ps=500 | time=25ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-98508&p=1&ps=500 | time=42ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-20477&p=1&ps=500 | time=22ms
INFO: Load active rules (done) | time=488ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck unused function
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=243ms
INFO: Load server rules (done) | time=264ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language PHP were converted to sonar.lang.patterns.php : **/*.php,**/*.php3,**/*.php4,**/*.php5,**/*.phtml,**/*.inc
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/Foo.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/Foo.h' is detected to be 'c'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.h' is detected to be 'c'
DEBUG: Language of file 'src/SimpleClass2.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass3.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass3.h' is detected to be 'c'
INFO: 8 files indexed
INFO: Quality profile for c: Sonar way
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorC -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=10ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=3ms
INFO: Sensor SquidSensorC
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
INFO: 0 compilation units analyzed
INFO: CFG: peak memory consumption: 0 entries
INFO: PPH: 0 files, 0 bytes, 0 hits, 0 queries
INFO: Sensor SquidSensorC (done) | time=833ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/Foo.cpp at line 9: 

    3:  class FooImpl {
    4:  public :
    5:  int bar ( Foo & ) ;
    6:  }
    8:  int FooImpl :: bar ( Foo & foo ) {
    9:  return foo . var ;
       ^
   10:  }
   12:  int Foo :: bar ( ) {
   13:  return FooImpl :: bar ( * this ) ;
   14:  }
   15:  


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


DEBUG: '__cplusplus' macro redefined
DEBUG: '__cplusplus' macro redefined
INFO: 5 compilation units analyzed
INFO: PPH: 125 files, 4430065 bytes, 287 hits, 412 queries
INFO: Sensor SquidSensorCpp (done) | time=6319ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=63ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=1ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdIndexer is used for c
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/Foo.h, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.h, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass3.h, basedir=/Users/Olivier/test/cppCheck]
INFO: DefaultCpdIndexer is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/Foo.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass2.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass3.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=15ms
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/Foo.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass2.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass3.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.h
INFO: Analysis report generated in 64ms, dir size=51 KB
INFO: Analysis reports compressed in 22ms, zip size=25 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktestunusedfunction&projectName=C%2B%2B%20cppcheck%20unused%20function | time=25ms
INFO: Analysis report uploaded in 26ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktestunusedfunction
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSU_9JnpsBLB0HBisGK
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 11.425s
INFO: Final Memory: 69M/996M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=46ms
INFO: Load global repositories (done) | time=111ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=2ms
INFO: Load plugins index (done) | time=3ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=51ms
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin GitHub [github] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin JavaScript [javascript] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PHP [php] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.10 (devcockpit)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * GitHub 1.2 (github)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * JavaScript 2.12 (javascript)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * PHP 2.8 (php)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.4
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: report plugin licensed to developers, EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=2ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.4/projects/cppchecktestunusedfunction
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktestunusedfunction | time=16ms
INFO: Load project repositories (done) | time=89ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=0ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * JavaScript => "js"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * PHP => "php"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktestunusedfunction | time=17ms
INFO: Load quality profiles (done) | time=22ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-70166&p=1&ps=500 | time=46ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-86774&p=1&ps=500 | time=37ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-35849&p=1&ps=500 | time=57ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-00039&p=1&ps=500 | time=41ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-88769&p=1&ps=500 | time=70ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-52844&p=1&ps=500 | time=38ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-69808&p=1&ps=500 | time=37ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=php-sonar-way-31354&p=1&ps=500 | time=25ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-98508&p=1&ps=500 | time=41ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-20477&p=1&ps=500 | time=21ms
INFO: Load active rules (done) | time=512ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck unused function
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=244ms
INFO: Load server rules (done) | time=268ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language PHP were converted to sonar.lang.patterns.php : **/*.php,**/*.php3,**/*.php4,**/*.php5,**/*.phtml,**/*.inc
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/Foo.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/Foo.h' is detected to be 'c'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.h' is detected to be 'c'
DEBUG: Language of file 'src/SimpleClass2.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass3.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass3.h' is detected to be 'c'
INFO: 8 files indexed
INFO: Quality profile for c: Sonar way
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorC -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=11ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=3ms
INFO: Sensor SquidSensorC
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
INFO: 0 compilation units analyzed
INFO: CFG: peak memory consumption: 0 entries
INFO: PPH: 0 files, 0 bytes, 0 hits, 0 queries
INFO: Sensor SquidSensorC (done) | time=855ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


DEBUG: '__cplusplus' macro redefined
DEBUG: '__cplusplus' macro redefined
INFO: 5 compilation units analyzed
INFO: PPH: 125 files, 4430065 bytes, 287 hits, 412 queries
INFO: Sensor SquidSensorCpp (done) | time=6689ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=63ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=1ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdIndexer is used for c
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/Foo.h, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.h, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass3.h, basedir=/Users/Olivier/test/cppCheck]
INFO: DefaultCpdIndexer is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/Foo.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass2.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass3.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=14ms
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/Foo.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass2.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass3.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.h
INFO: Analysis report generated in 63ms, dir size=51 KB
INFO: Analysis reports compressed in 22ms, zip size=25 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktestunusedfunction&projectName=C%2B%2B%20cppcheck%20unused%20function | time=19ms
INFO: Analysis report uploaded in 22ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktestunusedfunction
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSVAL1wpsBLB0HBisGP
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 12.406s
INFO: Final Memory: 67M/899M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=51ms
INFO: Load global repositories (done) | time=114ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=2ms
INFO: Load plugins index (done) | time=3ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=61ms
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin GitHub [github] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin JavaScript [javascript] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PHP [php] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.10 (devcockpit)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * GitHub 1.2 (github)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * JavaScript 2.12 (javascript)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * PHP 2.8 (php)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.4
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: report plugin licensed to developers, EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=2ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.4/projects/cppchecktestunusedfunction
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktestunusedfunction | time=13ms
INFO: Load project repositories (done) | time=73ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=1ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * JavaScript => "js"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * PHP => "php"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktestunusedfunction | time=14ms
INFO: Load quality profiles (done) | time=18ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-70166&p=1&ps=500 | time=37ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-86774&p=1&ps=500 | time=29ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-35849&p=1&ps=500 | time=44ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-00039&p=1&ps=500 | time=37ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-88769&p=1&ps=500 | time=73ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-52844&p=1&ps=500 | time=31ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-69808&p=1&ps=500 | time=44ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=php-sonar-way-31354&p=1&ps=500 | time=29ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-98508&p=1&ps=500 | time=43ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-20477&p=1&ps=500 | time=21ms
INFO: Load active rules (done) | time=478ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck unused function
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=239ms
INFO: Load server rules (done) | time=261ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language PHP were converted to sonar.lang.patterns.php : **/*.php,**/*.php3,**/*.php4,**/*.php5,**/*.phtml,**/*.inc
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/Foo.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/Foo.h' is detected to be 'c'
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.h' is detected to be 'c'
DEBUG: Language of file 'src/SimpleClass2.cpp' is detected to be 'cpp'
INFO: 6 files indexed
INFO: Quality profile for c: Sonar way
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorC -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=10ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=3ms
INFO: Sensor SquidSensorC
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
INFO: 0 compilation units analyzed
INFO: CFG: peak memory consumption: 0 entries
INFO: PPH: 0 files, 0 bytes, 0 hits, 0 queries
INFO: Sensor SquidSensorC (done) | time=781ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


DEBUG: '__cplusplus' macro redefined
INFO: 4 compilation units analyzed
INFO: PPH: 125 files, 4430065 bytes, 150 hits, 275 queries
INFO: Sensor SquidSensorCpp (done) | time=5523ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=62ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=0ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdIndexer is used for c
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/Foo.h, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.h, basedir=/Users/Olivier/test/cppCheck]
INFO: DefaultCpdIndexer is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/Foo.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass2.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=12ms
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/Foo.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass2.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.h
INFO: Analysis report generated in 50ms, dir size=47 KB
INFO: Analysis reports compressed in 17ms, zip size=22 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktestunusedfunction&projectName=C%2B%2B%20cppcheck%20unused%20function | time=18ms
INFO: Analysis report uploaded in 21ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktestunusedfunction
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSVBCEMpsBLB0HBisGV
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 10.876s
INFO: Final Memory: 69M/1043M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=64ms
INFO: Load global repositories (done) | time=130ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=2ms
INFO: Load plugins index (done) | time=4ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=56ms
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin GitHub [github] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin JavaScript [javascript] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PHP [php] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.10 (devcockpit)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * GitHub 1.2 (github)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * JavaScript 2.12 (javascript)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * PHP 2.8 (php)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.4
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: report plugin licensed to developers, EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=2ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.4/projects/cppchecktestunusedfunction
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktestunusedfunction | time=18ms
INFO: Load project repositories (done) | time=78ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=1ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * JavaScript => "js"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * PHP => "php"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktestunusedfunction | time=17ms
INFO: Load quality profiles (done) | time=21ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-70166&p=1&ps=500 | time=40ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-86774&p=1&ps=500 | time=32ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-35849&p=1&ps=500 | time=46ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-00039&p=1&ps=500 | time=38ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-88769&p=1&ps=500 | time=73ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-52844&p=1&ps=500 | time=36ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-69808&p=1&ps=500 | time=40ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=php-sonar-way-31354&p=1&ps=500 | time=27ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-98508&p=1&ps=500 | time=43ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-20477&p=1&ps=500 | time=25ms
INFO: Load active rules (done) | time=487ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck unused function
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=243ms
INFO: Load server rules (done) | time=266ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language PHP were converted to sonar.lang.patterns.php : **/*.php,**/*.php3,**/*.php4,**/*.php5,**/*.phtml,**/*.inc
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/Foo.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/Foo.h' is detected to be 'c'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.h' is detected to be 'c'
DEBUG: Language of file 'src/SimpleClass2.cpp' is detected to be 'cpp'
INFO: 6 files indexed
INFO: Quality profile for c: Sonar way
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorC -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=10ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=3ms
INFO: Sensor SquidSensorC
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
INFO: 0 compilation units analyzed
INFO: CFG: peak memory consumption: 0 entries
INFO: PPH: 0 files, 0 bytes, 0 hits, 0 queries
INFO: Sensor SquidSensorC (done) | time=807ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


DEBUG: '__cplusplus' macro redefined
INFO: 4 compilation units analyzed
INFO: PPH: 125 files, 4430065 bytes, 150 hits, 275 queries
INFO: Sensor SquidSensorCpp (done) | time=5850ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=61ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=1ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=0ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdIndexer is used for c
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/Foo.h, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.h, basedir=/Users/Olivier/test/cppCheck]
INFO: DefaultCpdIndexer is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/Foo.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass2.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=11ms
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/Foo.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass2.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.h
INFO: Analysis report generated in 54ms, dir size=47 KB
INFO: Analysis reports compressed in 17ms, zip size=22 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktestunusedfunction&projectName=C%2B%2B%20cppcheck%20unused%20function | time=22ms
INFO: Analysis report uploaded in 25ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktestunusedfunction
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSVCLhgpsBLB0HBisGZ
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 11.450s
INFO: Final Memory: 69M/1034M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/global
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=48ms
INFO: Load global repositories (done) | time=111ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=3ms
INFO: Load plugins index (done) | time=4ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=50ms
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin GitHub [github] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin JavaScript [javascript] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PL/SQL [plsql] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SonarQube :: Cppcheck Plugin [cppcheck] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Report [report] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PHP [php] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Swift [swift] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.10 (devcockpit)
DEBUG:   * C / C++ / Objective-C 3.11 (cpp)
DEBUG:   * GitHub 1.2 (github)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * JavaScript 2.12 (javascript)
DEBUG:   * PL/SQL 2.7.1 (plsql)
DEBUG:   * C# 5.1 (csharp)
DEBUG:   * Java 3.13.1 (java)
DEBUG:   * Cobol 3.0 (cobol)
DEBUG:   * SonarQube :: Cppcheck Plugin 1.0 (cppcheck)
DEBUG:   * SQALE 2.7 (sqale)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * Report 1.6 (report)
DEBUG:   * PHP 2.8 (php)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * Views 2.10 (views)
DEBUG:   * Swift 1.6 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.4
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: report plugin licensed to developers, EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=2ms
DEBUG: cache: /Users/Olivier/.sonar/ws_cache/http%3A%2F%2Flocalhost%3A9000/5.4/projects/cppchecktestunusedfunction
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cppchecktestunusedfunction | time=15ms
INFO: Load project repositories (done) | time=75ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=1ms
INFO: Apply project exclusions
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * JavaScript => "js"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * PHP => "php"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cppchecktestunusedfunction | time=15ms
INFO: Load quality profiles (done) | time=19ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-70166&p=1&ps=500 | time=38ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-86774&p=1&ps=500 | time=41ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-35849&p=1&ps=500 | time=45ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-00039&p=1&ps=500 | time=36ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-88769&p=1&ps=500 | time=67ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-52844&p=1&ps=500 | time=30ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-69808&p=1&ps=500 | time=38ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=php-sonar-way-31354&p=1&ps=500 | time=24ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-98508&p=1&ps=500 | time=41ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-20477&p=1&ps=500 | time=22ms
INFO: Load active rules (done) | time=466ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ cppcheck unused function
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=212ms
INFO: Load server rules (done) | time=234ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language PHP were converted to sonar.lang.patterns.php : **/*.php,**/*.php3,**/*.php4,**/*.php5,**/*.phtml,**/*.inc
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/Foo.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/Foo.h' is detected to be 'c'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.h' is detected to be 'c'
DEBUG: Language of file 'src/SimpleClass2.cpp' is detected to be 'cpp'
INFO: 6 files indexed
INFO: Quality profile for c: Sonar way
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,plsql
DEBUG: Sensors : Lines Sensor (wrapped) -> QProfileSensor -> SquidSensorC -> SquidSensorCpp -> Cppcheck -> SCM Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Sensor (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=10ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=3ms
INFO: Sensor SquidSensorC
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
INFO: CFG: peak memory consumption: 0 entries
INFO: 0 compilation units analyzed
INFO: PPH: 0 files, 0 bytes, 0 hits, 0 queries
INFO: Sensor SquidSensorC (done) | time=782ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
DEBUG: '__cplusplus' macro redefined
DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


DEBUG: '__cplusplus' macro redefined
INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


DEBUG: '__cplusplus' macro redefined
INFO: 4 compilation units analyzed
INFO: PPH: 125 files, 4430065 bytes, 150 hits, 275 queries
INFO: Sensor SquidSensorCpp (done) | time=5519ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=63ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=1ms
INFO: Sensor CPD Sensor (wrapped)
INFO: DefaultCpdIndexer is used for c
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/Foo.h, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.h, basedir=/Users/Olivier/test/cppCheck]
INFO: DefaultCpdIndexer is used for cpp
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/Foo.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/HelloWorld.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass.cpp, basedir=/Users/Olivier/test/cppCheck]
DEBUG: Populating index from [moduleKey=cppchecktestunusedfunction, relative=src/SimpleClass2.cpp, basedir=/Users/Olivier/test/cppCheck]
INFO: Sensor CPD Sensor (wrapped) (done) | time=12ms
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/Foo.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass2.cpp
DEBUG: Detection of duplications for cppchecktestunusedfunction:src/SimpleClass.h
INFO: Analysis report generated in 52ms, dir size=47 KB
INFO: Analysis reports compressed in 19ms, zip size=22 KB
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cppchecktestunusedfunction&projectName=C%2B%2B%20cppcheck%20unused%20function | time=21ms
INFO: Analysis report uploaded in 22ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktestunusedfunction
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSVDN_ipsBLB0HBisGe
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 10.708s
INFO: Final Memory: 69M/1035M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load global repositories
INFO: Load global repositories (done) | time=104ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
INFO: Load plugins index (done) | time=3ms
INFO: SonarQube server 5.4
INFO: Default locale: "en_US", source code encoding: "UTF-8"
INFO: report plugin licensed to developers, EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Process project properties
INFO: Load project repositories
INFO: Load project repositories (done) | time=84ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=0ms
INFO: Apply project exclusions
INFO: Load quality profiles
INFO: Load quality profiles (done) | time=22ms
INFO: Load active rules
INFO: Load active rules (done) | time=514ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
INFO: -------------  Scan C++ cppcheck unused function
INFO: Load server rules
INFO: Load server rules (done) | time=241ms
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
INFO: ------------------------------------------------------------------------
INFO: EXECUTION FAILURE
INFO: ------------------------------------------------------------------------
INFO: Total time: 2.884s
INFO: Final Memory: 55M/388M
INFO: ------------------------------------------------------------------------
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load global repositories
INFO: Load global repositories (done) | time=104ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
INFO: Load plugins index (done) | time=6ms
INFO: SonarQube server 5.4
INFO: Default locale: "en_US", source code encoding: "UTF-8"
INFO: report plugin licensed to developers, EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Process project properties
INFO: Load project repositories
INFO: Load project repositories (done) | time=77ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=0ms
INFO: Apply project exclusions
INFO: Load quality profiles
INFO: Load quality profiles (done) | time=19ms
INFO: Load active rules
INFO: Load active rules (done) | time=457ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
INFO: -------------  Scan C++ cppcheck unused function
INFO: Language is forced to cpp
INFO: Load server rules
INFO: Load server rules (done) | time=232ms
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
INFO: 6 files indexed
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor
INFO: Sensor Lines Sensor (done) | time=10ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=3ms
INFO: Sensor SquidSensorCpp
INFO: C/C++ Preprocessor in silent mode. Relaunch the analysis with "sonar.verbose=true" to see issues encountered by the preprocessor.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


INFO: 4 compilation units analyzed
INFO: PPH: 125 files, 4430065 bytes, 150 hits, 275 queries
INFO: Sensor SquidSensorCpp (done) | time=6258ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=57ms
INFO: Sensor SCM Sensor
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (done) | time=0ms
INFO: Sensor Code Colorizer Sensor
INFO: Sensor Code Colorizer Sensor (done) | time=1ms
INFO: Sensor CPD Sensor
INFO: DefaultCpdIndexer is used for cpp
INFO: Sensor CPD Sensor (done) | time=9ms
INFO: Analysis report generated in 52ms, dir size=42 KB
INFO: Analysis reports compressed in 16ms, zip size=21 KB
INFO: Analysis report uploaded in 22ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktestunusedfunction
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSVDvl9psBLB0HBisGi
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 10.341s
INFO: Final Memory: 75M/1023M
INFO: ------------------------------------------------------------------------
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load global repositories
INFO: Load global repositories (done) | time=172ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
INFO: Load plugins index (done) | time=4ms
INFO: SonarQube server 5.3
INFO: Default locale: "en_US", source code encoding: "UTF-8"
INFO: Process project properties
INFO: Load project repositories
INFO: Load project repositories (done) | time=15ms
INFO: Apply project exclusions
INFO: Load quality profiles
INFO: Load quality profiles (done) | time=50ms
INFO: Load active rules
INFO: Load active rules (done) | time=1089ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
INFO: -------------  Scan C++ cppcheck unused function
INFO: Load server rules
INFO: Load server rules (done) | time=789ms
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
INFO: ------------------------------------------------------------------------
INFO: EXECUTION FAILURE
INFO: ------------------------------------------------------------------------
INFO: Total time: 5.210s
INFO: Final Memory: 48M/274M
INFO: ------------------------------------------------------------------------
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.4 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load global repositories
INFO: Load global repositories (done) | time=113ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
INFO: Load plugins index (done) | time=3ms
INFO: SonarQube server 5.3
INFO: Default locale: "en_US", source code encoding: "UTF-8"
INFO: Process project properties
INFO: Load project repositories
INFO: Load project repositories (done) | time=11ms
INFO: Apply project exclusions
INFO: Load quality profiles
INFO: Load quality profiles (done) | time=27ms
INFO: Load active rules
INFO: Load active rules (done) | time=783ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
INFO: -------------  Scan C++ cppcheck unused function
INFO: Language is forced to cpp
INFO: Load server rules
INFO: Load server rules (done) | time=327ms
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
INFO: 6 files indexed
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
INFO: devcockpit EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: sqale EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: views EVALUATION [Expiration: 2016-05-16, Server: *]
INFO: Sensor Lines Sensor
INFO: Sensor Lines Sensor (done) | time=14ms
INFO: Sensor QProfileSensor
INFO: Sensor QProfileSensor (done) | time=5ms
INFO: Sensor SquidSensorCpp
INFO: C/C++ Preprocessor in silent mode. Relaunch the analysis with "sonar.verbose=true" to see issues encountered by the preprocessor.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
INFO: Parse error in file /Users/Olivier/test/cppCheck/src/HelloWorld.cpp at line -42: 

    1:  using namespace std ;
  -42:  typedef __char16_t char16_t ; typedef __char32_t char32_t ; namespace std { inline namespace __1 { } } template < bool > struct __static_assert_test ; template < > struct __static_assert_test < true > { } ; template < unsigned
                                                                   ^


INFO: Parse error in file /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/__config at line 389: 

  247:  typedef __char16_t char16_t ;
  248:  typedef __char32_t char32_t ;
  389:  namespace std {
       ^
  390:  inline namespace __1 {
  391:  }
  392:  }
  580:  template < bool > struct __static_assert_test ;
  581:  template < > struct __static_assert_test < true > { } ;
  582:  template < unsigned


INFO: 4 compilation units analyzed
INFO: PPH: 125 files, 4430065 bytes, 150 hits, 275 queries
INFO: Sensor SquidSensorCpp (done) | time=6593ms
INFO: Sensor Cppcheck
INFO: Cppcheck version: 1.72
INFO: Sensor Cppcheck (done) | time=97ms
INFO: Sensor SCM Sensor
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (done) | time=0ms
INFO: Sensor Code Colorizer Sensor
INFO: Sensor Code Colorizer Sensor (done) | time=1ms
INFO: Sensor CPD Sensor
INFO: DefaultCpdEngine is used for cpp
INFO: Sensor CPD Sensor (done) | time=38ms
INFO: Analysis report generated in 78ms, dir size=150 KB
INFO: Analysis reports compressed in 22ms, zip size=33 KB
INFO: Analysis report uploaded in 95ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cppchecktestunusedfunction
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVSZlx72WlU3HWSa8_nl
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 11.142s
INFO: Final Memory: 67M/920M
INFO: ------------------------------------------------------------------------
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.5 x86_64
INFO: SONAR_SCANNER_OPTS=-Xms1024m -Xmx4g
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
INFO: ------------------------------------------------------------------------
INFO: EXECUTION FAILURE
INFO: ------------------------------------------------------------------------
INFO: Total time: 0.270s
INFO: Final Memory: 7M/981M
INFO: ------------------------------------------------------------------------
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6.1/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6.1
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.5 x86_64
INFO: SONAR_SCANNER_OPTS=-Xms1024m -Xmx4g
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=208ms
INFO: Load global repositories (done) | time=287ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=5ms
INFO: Load plugins index (done) | time=6ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=85ms
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Groovy [groovy] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin JavaScript [javascript] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * C / C++ / Objective-C 3.12 (cpp)
DEBUG:   * C# 5.0 (csharp)
DEBUG:   * Groovy 1.3.1 (groovy)
DEBUG:   * Java 3.14 (java)
DEBUG:   * Cobol 3.1 (cobol)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * JavaScript 2.13 (javascript)
DEBUG:   * Governance 1.0 (governance)
DEBUG: Execution getVersion
INFO: SonarQube server 5.6
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: governance EVALUATION [Expiration: 2016-07-17, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=4ms
INFO: Load project repositories
DEBUG: GET 404 http://localhost:9000/batch/project.protobuf?key=cpp+test+unusedfunction | time=35ms
DEBUG: Project repository not available - continuing without it
org.sonarqube.ws.client.HttpException: Error 404 on http://localhost:9000/batch/project.protobuf?key=cpp+test+unusedfunction
	at org.sonarqube.ws.client.BaseResponse.failIfNotSuccessful(BaseResponse.java:34) ~[sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.bootstrap.BatchWsClient.failIfUnauthorized(BatchWsClient.java:99) ~[sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.bootstrap.BatchWsClient.call(BatchWsClient.java:69) ~[sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.repository.DefaultProjectRepositoriesLoader.load(DefaultProjectRepositoriesLoader.java:58) ~[sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.repository.ProjectRepositoriesProvider.provide(ProjectRepositoriesProvider.java:39) [sonar-scanner-engine-shaded-5.6.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_60]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_60]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_60]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_60]
	at org.picocontainer.injectors.MethodInjector.invokeMethod(MethodInjector.java:129) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.MethodInjector.access$000(MethodInjector.java:39) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.MethodInjector$2.run(MethodInjector.java:113) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.MethodInjector.decorateComponentInstance(MethodInjector.java:120) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.CompositeInjector.decorateComponentInstance(CompositeInjector.java:58) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.Reinjector.reinject(Reinjector.java:142) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.ProviderAdapter.getComponentInstance(ProviderAdapter.java:96) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.core.platform.ComponentContainer$ExtendedDefaultPicoContainer.getComponent(ComponentContainer.java:67) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:632) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.parameters.BasicComponentParameter$1.resolveInstance(BasicComponentParameter.java:118) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.parameters.ComponentParameter$1.resolveInstance(ComponentParameter.java:136) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.SingleMemberInjector.getParameter(SingleMemberInjector.java:78) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters.getParameterArguments(ConstructorInjector.java:309) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:335) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.core.platform.ComponentContainer$ExtendedDefaultPicoContainer.getComponent(ComponentContainer.java:67) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.core.platform.ComponentContainer.getComponentByType(ComponentContainer.java:272) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.scan.ProjectScanContainer.doBeforeStart(ProjectScanContainer.java:112) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.core.platform.ComponentContainer.startComponents(ComponentContainer.java:140) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.core.platform.ComponentContainer.execute(ComponentContainer.java:127) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.task.ScanTask.execute(ScanTask.java:47) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.task.TaskContainer.doAfterStart(TaskContainer.java:86) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.core.platform.ComponentContainer.startComponents(ComponentContainer.java:142) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.core.platform.ComponentContainer.execute(ComponentContainer.java:127) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.bootstrap.GlobalContainer.executeTask(GlobalContainer.java:106) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.bootstrapper.Batch.executeTask(Batch.java:119) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:62) [sonar-scanner-api-batch3811755801501938137.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_60]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_60]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_60]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_60]
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60) [sonar-scanner-cli-2.6.1.jar:na]
	at com.sun.proxy.$Proxy0.execute(Unknown Source) [na:na]
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:240) [sonar-scanner-cli-2.6.1.jar:na]
	at org.sonarsource.scanner.api.EmbeddedScanner.runAnalysis(EmbeddedScanner.java:151) [sonar-scanner-cli-2.6.1.jar:na]
	at org.sonarsource.scanner.cli.Main.runAnalysis(Main.java:110) [sonar-scanner-cli-2.6.1.jar:na]
	at org.sonarsource.scanner.cli.Main.execute(Main.java:72) [sonar-scanner-cli-2.6.1.jar:na]
	at org.sonarsource.scanner.cli.Main.main(Main.java:60) [sonar-scanner-cli-2.6.1.jar:na]

INFO: Load project repositories (done) | time=58ms
INFO: ------------------------------------------------------------------------
INFO: EXECUTION FAILURE
INFO: ------------------------------------------------------------------------
INFO: Total time: 33.733s
INFO: Final Memory: 47M/981M
INFO: ------------------------------------------------------------------------
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6.1/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6.1
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.5 x86_64
INFO: SONAR_SCANNER_OPTS=-Xms1024m -Xmx4g
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=82ms
INFO: Load global repositories (done) | time=142ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=3ms
INFO: Load plugins index (done) | time=3ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=51ms
DEBUG: API compatibility mode is enabled on plugin C / C++ / Objective-C [cpp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Groovy [groovy] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Java [java] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin JavaScript [javascript] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * C / C++ / Objective-C 3.12 (cpp)
DEBUG:   * C# 5.0 (csharp)
DEBUG:   * Groovy 1.3.1 (groovy)
DEBUG:   * Java 3.14 (java)
DEBUG:   * Cobol 3.1 (cobol)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * JavaScript 2.13 (javascript)
DEBUG:   * Governance 1.0 (governance)
DEBUG: Execution getVersion
INFO: SonarQube server 5.6
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: governance EVALUATION [Expiration: 2016-07-17, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=2ms
INFO: Load project repositories
DEBUG: GET 404 http://localhost:9000/batch/project.protobuf?key=cpptestunusedfunction | time=18ms
DEBUG: Project repository not available - continuing without it
org.sonarqube.ws.client.HttpException: Error 404 on http://localhost:9000/batch/project.protobuf?key=cpptestunusedfunction
	at org.sonarqube.ws.client.BaseResponse.failIfNotSuccessful(BaseResponse.java:34) ~[sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.bootstrap.BatchWsClient.failIfUnauthorized(BatchWsClient.java:99) ~[sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.bootstrap.BatchWsClient.call(BatchWsClient.java:69) ~[sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.repository.DefaultProjectRepositoriesLoader.load(DefaultProjectRepositoriesLoader.java:58) ~[sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.repository.ProjectRepositoriesProvider.provide(ProjectRepositoriesProvider.java:39) [sonar-scanner-engine-shaded-5.6.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_60]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_60]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_60]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_60]
	at org.picocontainer.injectors.MethodInjector.invokeMethod(MethodInjector.java:129) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.MethodInjector.access$000(MethodInjector.java:39) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.MethodInjector$2.run(MethodInjector.java:113) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.MethodInjector.decorateComponentInstance(MethodInjector.java:120) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.CompositeInjector.decorateComponentInstance(CompositeInjector.java:58) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.Reinjector.reinject(Reinjector.java:142) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.ProviderAdapter.getComponentInstance(ProviderAdapter.java:96) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.core.platform.ComponentContainer$ExtendedDefaultPicoContainer.getComponent(ComponentContainer.java:67) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:632) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.parameters.BasicComponentParameter$1.resolveInstance(BasicComponentParameter.java:118) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.parameters.ComponentParameter$1.resolveInstance(ComponentParameter.java:136) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.SingleMemberInjector.getParameter(SingleMemberInjector.java:78) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters.getParameterArguments(ConstructorInjector.java:309) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:335) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.core.platform.ComponentContainer$ExtendedDefaultPicoContainer.getComponent(ComponentContainer.java:67) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.core.platform.ComponentContainer.getComponentByType(ComponentContainer.java:272) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.scan.ProjectScanContainer.doBeforeStart(ProjectScanContainer.java:112) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.core.platform.ComponentContainer.startComponents(ComponentContainer.java:140) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.core.platform.ComponentContainer.execute(ComponentContainer.java:127) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.task.ScanTask.execute(ScanTask.java:47) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.task.TaskContainer.doAfterStart(TaskContainer.java:86) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.core.platform.ComponentContainer.startComponents(ComponentContainer.java:142) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.core.platform.ComponentContainer.execute(ComponentContainer.java:127) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.bootstrap.GlobalContainer.executeTask(GlobalContainer.java:106) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonar.batch.bootstrapper.Batch.executeTask(Batch.java:119) [sonar-scanner-engine-shaded-5.6.jar:na]
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:62) [sonar-scanner-api-batch7893850816060200655.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_60]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_60]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_60]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_60]
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60) [sonar-scanner-cli-2.6.1.jar:na]
	at com.sun.proxy.$Proxy0.execute(Unknown Source) [na:na]
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:240) [sonar-scanner-cli-2.6.1.jar:na]
	at org.sonarsource.scanner.api.EmbeddedScanner.runAnalysis(EmbeddedScanner.java:151) [sonar-scanner-cli-2.6.1.jar:na]
	at org.sonarsource.scanner.cli.Main.runAnalysis(Main.java:110) [sonar-scanner-cli-2.6.1.jar:na]
	at org.sonarsource.scanner.cli.Main.execute(Main.java:72) [sonar-scanner-cli-2.6.1.jar:na]
	at org.sonarsource.scanner.cli.Main.main(Main.java:60) [sonar-scanner-cli-2.6.1.jar:na]

INFO: Load project repositories (done) | time=27ms
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * C# => "cs"
DEBUG:   * Groovy => "grvy"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * JavaScript => "js"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?defaults=true | time=99ms
INFO: Load quality profiles (done) | time=117ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-56825&p=1&ps=500 | time=311ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-27067&p=1&ps=500 | time=103ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-88029&p=1&ps=500 | time=116ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-46334&p=1&ps=500 | time=79ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=grvy-sonar-way-66630&p=1&ps=500 | time=62ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-09128&p=1&ps=500 | time=183ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-07413&p=1&ps=500 | time=72ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-63978&p=1&ps=500 | time=82ms
INFO: Load active rules (done) | time=1166ms
WARN: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ unused function
INFO: Language is forced to cpp
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=238ms
INFO: Load server rules (done) | time=254ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp,**/*.h
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language Groovy were converted to sonar.lang.patterns.grvy : **/*.groovy
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Language of file 'src/Foo.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/Foo.h' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.h' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass2.cpp' is detected to be 'cpp'
INFO: 6 files indexed
INFO: Quality profile for cpp: Sonar way
INFO: JaCoCoSensor: JaCoCo report not found : /Users/Olivier/test/cppCheck/target/jacoco.exec
INFO: JaCoCoItSensor: JaCoCo IT report not found: /Users/Olivier/test/cppCheck/target/jacoco-it.exec
DEBUG: Code colorizer, supported languages: cs,grvy
DEBUG: Sensors : Lines Sensor (wrapped) -> SquidSensorCpp -> SCM Sensor (wrapped) -> Zero Coverage Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Block Indexer (wrapped)
INFO: cpp EVALUATION [Expiration: 2016-07-17, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=11ms
INFO: Sensor SquidSensorCpp
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
DEBUG: Metric lines is an internal metric computed by SonarQube. Provided value is ignored.
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
INFO: 4 compilation units analyzed
INFO: PPH: 201 files, 4432338 bytes, 440 hits, 641 queries
INFO: Sensor SquidSensorCpp (done) | time=7185ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor Zero Coverage Sensor (wrapped)
INFO: Sensor Zero Coverage Sensor (wrapped) (done) | time=11ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=0ms
INFO: Sensor CPD Block Indexer (wrapped)
INFO: DefaultCpdBlockIndexer is used for cpp
DEBUG: Populating index from /Users/Olivier/test/cppCheck/src/Foo.cpp
DEBUG: Populating index from /Users/Olivier/test/cppCheck/src/Foo.h
DEBUG: Populating index from /Users/Olivier/test/cppCheck/src/HelloWorld.cpp
DEBUG: Populating index from /Users/Olivier/test/cppCheck/src/SimpleClass.cpp
DEBUG: Populating index from /Users/Olivier/test/cppCheck/src/SimpleClass.h
DEBUG: Populating index from /Users/Olivier/test/cppCheck/src/SimpleClass2.cpp
INFO: Sensor CPD Block Indexer (wrapped) (done) | time=16ms
INFO: Calculating CPD for 4 files
DEBUG: Detection of duplications for cpptestunusedfunction:src/SimpleClass.h
DEBUG: Detection of duplications for cpptestunusedfunction:src/Foo.cpp
DEBUG: Detection of duplications for cpptestunusedfunction:src/SimpleClass.cpp
DEBUG: Detection of duplications for cpptestunusedfunction:src/SimpleClass2.cpp
INFO: CPD calculation finished
INFO: Analysis report generated in 78ms, dir size=43 KB
INFO: Analysis reports compressed in 22ms, zip size=20 KB
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cpptestunusedfunction&projectName=C%2B%2B%20unused%20function | time=161ms
INFO: Analysis report uploaded in 164ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cpptestunusedfunction
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVU0tV7JOSkYTBXTHOpc
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: Post-jobs : 
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 12.341s
INFO: Final Memory: 72M/1792M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6.1/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6.1
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.5 x86_64
INFO: SONAR_SCANNER_OPTS=-Xms1024m -Xmx4g
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load global repositories
INFO: Load global repositories (done) | time=110ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
INFO: Load plugins index (done) | time=3ms
INFO: SonarQube server 5.6
INFO: governance EVALUATION [Expiration: 2016-07-17, Server: *]
INFO: Trigger Views update
INFO: Following views updates have been successfully submitted:
INFO:   * http://localhost:9000/api/ce/task?id=AVU09OQ-OSkYTBXTHOpd
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 2.068s
INFO: Final Memory: 46M/1042M
INFO: ------------------------------------------------------------------------
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.6 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Publish global mode
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=132ms
INFO: Load global repositories (done) | time=201ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=3ms
INFO: Load plugins index (done) | time=4ms
DEBUG: Load plugins
DEBUG: Download plugin sonar-pmd-plugin-2.6.jar to /Users/Olivier/.sonar/cache/_tmp/fileCache8122678585625169953.tmp
DEBUG: GET 200 http://localhost:9000/deploy/plugins/pmd/sonar-pmd-plugin-2.6.jar | time=3ms
DEBUG: Download plugin sonar-javascript-plugin-2.16.0.2922.jar to /Users/Olivier/.sonar/cache/_tmp/fileCache4364947385331610841.tmp
DEBUG: GET 200 http://localhost:9000/deploy/plugins/javascript/sonar-javascript-plugin-2.16.0.2922.jar | time=2ms
DEBUG: Download plugin sonar-findbugs-plugin-3.4.3.jar to /Users/Olivier/.sonar/cache/_tmp/fileCache5555368030329049720.tmp
DEBUG: GET 200 http://localhost:9000/deploy/plugins/findbugs/sonar-findbugs-plugin-3.4.3.jar | time=1ms
DEBUG: Download plugin sonar-swift-plugin-1.7.jar to /Users/Olivier/.sonar/cache/_tmp/fileCache8848718151417584126.tmp
DEBUG: GET 200 http://localhost:9000/deploy/plugins/swift/sonar-swift-plugin-1.7.jar | time=2ms
DEBUG: Load plugins (done) | time=432ms
DEBUG: API compatibility mode is enabled on plugin PMD [pmd] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin RPG [rpg] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Web [web] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin XML [xml] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PHP [php] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Checkstyle [checkstyle] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Developer Cockpit 1.12 (devcockpit)
DEBUG:   * Cobertura 1.7 (cobertura)
DEBUG:   * C / C++ / Objective-C 4.1 (cpp)
DEBUG:   * GitHub 1.3 (github)
DEBUG:   * PMD 2.6 (pmd)
DEBUG:   * RPG 1.4.1 (rpg)
DEBUG:   * PL/I 1.4 (pli)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * JavaScript 2.16.0.2922 (javascript)
DEBUG:   * PL/SQL 2.8 (plsql)
DEBUG:   * C# 5.3.2 (csharp)
DEBUG:   * Findbugs 3.4.3 (findbugs)
DEBUG:   * Java 4.2 (java)
DEBUG:   * Cobol 3.1.1 (cobol)
DEBUG:   * Web 2.4 (web)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * XML 1.4.1 (xml)
DEBUG:   * PHP 2.8 (php)
DEBUG:   * Checkstyle 2.4 (checkstyle)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * Governance 1.1 (governance)
DEBUG:   * Swift 1.7 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.6.1
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: governance EVALUATION [Expiration: 2016-09-12, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=3ms
INFO: Load project repositories
DEBUG: GET 404 http://localhost:9000/batch/project.protobuf?key=cpptestunusedfunction | time=20ms
DEBUG: Project repository not available - continuing without it
org.sonarqube.ws.client.HttpException: Error 404 on http://localhost:9000/batch/project.protobuf?key=cpptestunusedfunction
	at org.sonarqube.ws.client.BaseResponse.failIfNotSuccessful(BaseResponse.java:34) ~[sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.sonar.batch.bootstrap.BatchWsClient.failIfUnauthorized(BatchWsClient.java:99) ~[sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.sonar.batch.bootstrap.BatchWsClient.call(BatchWsClient.java:69) ~[sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.sonar.batch.repository.DefaultProjectRepositoriesLoader.load(DefaultProjectRepositoriesLoader.java:58) ~[sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.sonar.batch.repository.ProjectRepositoriesProvider.provide(ProjectRepositoriesProvider.java:39) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_60]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_60]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_60]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_60]
	at org.picocontainer.injectors.MethodInjector.invokeMethod(MethodInjector.java:129) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.injectors.MethodInjector.access$000(MethodInjector.java:39) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.injectors.MethodInjector$2.run(MethodInjector.java:113) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.injectors.MethodInjector.decorateComponentInstance(MethodInjector.java:120) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.injectors.CompositeInjector.decorateComponentInstance(CompositeInjector.java:58) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.injectors.Reinjector.reinject(Reinjector.java:142) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.injectors.ProviderAdapter.getComponentInstance(ProviderAdapter.java:96) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.sonar.core.platform.ComponentContainer$ExtendedDefaultPicoContainer.getComponent(ComponentContainer.java:67) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:632) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.parameters.BasicComponentParameter$1.resolveInstance(BasicComponentParameter.java:118) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.parameters.ComponentParameter$1.resolveInstance(ComponentParameter.java:136) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.injectors.SingleMemberInjector.getParameter(SingleMemberInjector.java:78) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.injectors.ConstructorInjector$CtorAndAdapters.getParameterArguments(ConstructorInjector.java:309) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.injectors.ConstructorInjector$1.run(ConstructorInjector.java:335) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.injectors.AbstractInjector$ThreadLocalCyclicDependencyGuard.observe(AbstractInjector.java:270) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.injectors.ConstructorInjector.getComponentInstance(ConstructorInjector.java:364) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.injectors.AbstractInjectionFactory$LifecycleAdapter.getComponentInstance(AbstractInjectionFactory.java:56) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.behaviors.AbstractBehavior.getComponentInstance(AbstractBehavior.java:64) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.behaviors.Stored.getComponentInstance(Stored.java:91) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.DefaultPicoContainer.getInstance(DefaultPicoContainer.java:699) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:647) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.sonar.core.platform.ComponentContainer$ExtendedDefaultPicoContainer.getComponent(ComponentContainer.java:67) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.picocontainer.DefaultPicoContainer.getComponent(DefaultPicoContainer.java:678) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.sonar.core.platform.ComponentContainer.getComponentByType(ComponentContainer.java:272) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.sonar.batch.scan.ProjectScanContainer.doBeforeStart(ProjectScanContainer.java:112) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.sonar.core.platform.ComponentContainer.startComponents(ComponentContainer.java:140) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.sonar.core.platform.ComponentContainer.execute(ComponentContainer.java:127) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.sonar.batch.task.ScanTask.execute(ScanTask.java:47) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.sonar.batch.task.TaskContainer.doAfterStart(TaskContainer.java:86) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.sonar.core.platform.ComponentContainer.startComponents(ComponentContainer.java:142) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.sonar.core.platform.ComponentContainer.execute(ComponentContainer.java:127) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.sonar.batch.bootstrap.GlobalContainer.executeTask(GlobalContainer.java:106) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.sonar.batch.bootstrapper.Batch.executeTask(Batch.java:119) [sonar-scanner-engine-shaded-5.6.1.jar:na]
	at org.sonarsource.scanner.api.internal.batch.BatchIsolatedLauncher.execute(BatchIsolatedLauncher.java:62) [sonar-scanner-api-batch2784899835522142709.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_60]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_60]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_60]
	at java.lang.reflect.Method.invoke(Method.java:497) ~[na:1.8.0_60]
	at org.sonarsource.scanner.api.internal.IsolatedLauncherProxy.invoke(IsolatedLauncherProxy.java:60) [sonar-scanner-cli-2.6.jar:na]
	at com.sun.proxy.$Proxy0.execute(Unknown Source) [na:na]
	at org.sonarsource.scanner.api.EmbeddedScanner.doExecute(EmbeddedScanner.java:240) [sonar-scanner-cli-2.6.jar:na]
	at org.sonarsource.scanner.api.EmbeddedScanner.runAnalysis(EmbeddedScanner.java:151) [sonar-scanner-cli-2.6.jar:na]
	at org.sonarsource.scanner.cli.Main.runAnalysis(Main.java:110) [sonar-scanner-cli-2.6.jar:na]
	at org.sonarsource.scanner.cli.Main.execute(Main.java:72) [sonar-scanner-cli-2.6.jar:na]
	at org.sonarsource.scanner.cli.Main.main(Main.java:60) [sonar-scanner-cli-2.6.jar:na]

INFO: Load project repositories (done) | time=30ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=0ms
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * RPG => "rpg"
DEBUG:   * PL/I => "pli"
DEBUG:   * JavaScript => "js"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * JSP => "jsp"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * Web => "web"
DEBUG:   * XML => "xml"
DEBUG:   * PHP => "php"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?defaults=true | time=68ms
INFO: Load quality profiles (done) | time=88ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-30182&p=1&ps=500 | time=135ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-31923&p=1&ps=500 | time=56ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-16593&p=1&ps=500 | time=110ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-86349&p=1&ps=500 | time=69ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-92755&p=1&ps=500 | time=157ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-09021&p=1&ps=500 | time=53ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=jsp-findbugs-security-jsp-42021&p=1&ps=500 | time=25ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-74022&p=1&ps=500 | time=64ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=php-sonar-way-10903&p=1&ps=500 | time=45ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=pli-sonarqube-way-26696&p=1&ps=500 | time=23ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-77251&p=1&ps=500 | time=65ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=rpg-sonar-way-07771&p=1&ps=500 | time=29ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-72866&p=1&ps=500 | time=45ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=web-sonar-way-54717&p=1&ps=500 | time=28ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=xml-sonar-way-21504&p=1&ps=500 | time=31ms
INFO: Load active rules (done) | time=1097ms
INFO: SCM provider autodetection failed. No SCM provider claims to support this project. Please use sonar.scm.provider to define SCM of your project.
INFO: Publish mode
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ unused function
INFO: Language is forced to cpp
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=116ms
INFO: Load server rules (done) | time=133ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp,**/*.h
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language RPG were converted to sonar.lang.patterns.rpg : **/*.rpg,**/*.rpgle,**/*.rpg,**/*.rpgle
DEBUG: Declared extensions of language PL/I were converted to sonar.lang.patterns.pli : **/*.pli
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language JSP were converted to sonar.lang.patterns.jsp : **/*.jsp
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language Web were converted to sonar.lang.patterns.web : **/*.html,**/*.xhtml,**/*.rhtml,**/*.shtml
DEBUG: Declared extensions of language XML were converted to sonar.lang.patterns.xml : **/*.xml
DEBUG: Declared extensions of language PHP were converted to sonar.lang.patterns.php : **/*.php,**/*.php3,**/*.php4,**/*.php5,**/*.phtml,**/*.inc
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/Foo.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/Foo.h' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.h' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass2.cpp' is detected to be 'cpp'
INFO: 6 files indexed
INFO: Quality profile for cpp: Sonar way
DEBUG: Code colorizer, supported languages: cs,web,jsp
DEBUG: 'C' skipped because there is no related file in current project
DEBUG: 'Objective-C' skipped because there is no related file in current project
DEBUG: 'gcov' skipped because one of the required properties is missing
DEBUG: 'cppunit' skipped because one of the required properties is missing
DEBUG: 'VisualStudioCoverage' skipped because one of the required properties is missing
DEBUG: 'bullseye' skipped because one of the required properties is missing
DEBUG: 'PliSquidSensor' skipped because there is no related file in current project
DEBUG: 'JavaScript Squid Sensor' skipped because there is no related file in current project
DEBUG: 'PL/SQL Sensor' skipped because there is no related file in current project
DEBUG: 'FindBugs Sensor' skipped because there is no related file in current project
DEBUG: 'SurefireSensor' skipped because there is no related file in current project
DEBUG: 'JaCoCoSensor' skipped because there is no related file in current project
DEBUG: 'JaCoCoItSensor' skipped because there is no related file in current project
DEBUG: 'JaCoCoOverallSensor' skipped because there is no related file in current project
DEBUG: 'JavaSquidSensor' skipped because there is no related file in current project
DEBUG: 'Swift Squid Sensor' skipped because there is no related file in current project
DEBUG: Sensors : Lines Sensor (wrapped) -> SCM Sensor (wrapped) -> CPP (wrapped) -> XmlFileSensor (wrapped) -> Zero Coverage Sensor (wrapped) -> Code Colorizer Sensor (wrapped) -> CPD Block Indexer (wrapped)
INFO: devcockpit EVALUATION [Expiration: 2016-09-12, Server: *]
INFO: cpp EVALUATION [Expiration: 2016-09-12, Server: *]
INFO: Sensor Lines Sensor (wrapped)
INFO: Sensor Lines Sensor (wrapped) (done) | time=12ms
INFO: Sensor SCM Sensor (wrapped)
INFO: No SCM system was detected. You can use the 'sonar.scm.provider' property to explicitly specify it.
INFO: Sensor SCM Sensor (wrapped) (done) | time=0ms
INFO: Sensor CPP (wrapped)
INFO: Using build-wrapper output: /Users/Olivier/test/cppCheck/bw/build-wrapper-dump.json
INFO: 4 compilation units analyzed
INFO: PPH: 200 files, 4483242 bytes, 441 hits, 641 queries
INFO: Sensor CPP (wrapped) (done) | time=7628ms
INFO: Sensor XmlFileSensor (wrapped)
INFO: Sensor XmlFileSensor (wrapped) (done) | time=0ms
INFO: Sensor Zero Coverage Sensor (wrapped)
INFO: Sensor Zero Coverage Sensor (wrapped) (done) | time=13ms
INFO: Sensor Code Colorizer Sensor (wrapped)
INFO: Sensor Code Colorizer Sensor (wrapped) (done) | time=2ms
INFO: Sensor CPD Block Indexer (wrapped)
INFO: DefaultCpdBlockIndexer is used for cpp
DEBUG: No CpdMapping for language cpp
INFO: Sensor CPD Block Indexer (wrapped) (done) | time=1ms
INFO: Calculating CPD for 4 files
DEBUG: Detection of duplications for cpptestunusedfunction:src/SimpleClass.h
DEBUG: Detection of duplications for cpptestunusedfunction:src/Foo.cpp
DEBUG: Detection of duplications for cpptestunusedfunction:src/SimpleClass.cpp
DEBUG: Detection of duplications for cpptestunusedfunction:src/SimpleClass2.cpp
INFO: CPD calculation finished
INFO: Analysis report generated in 83ms, dir size=54 KB
INFO: Analysis reports compressed in 17ms, zip size=24 KB
INFO: Analysis report generated in /Users/Olivier/test/cppCheck/.sonar/batch-report
DEBUG: Upload report
DEBUG: POST 200 http://localhost:9000/api/ce/submit?projectKey=cpptestunusedfunction&projectName=C%2B%2B%20unused%20function | time=132ms
INFO: Analysis report uploaded in 136ms
INFO: ANALYSIS SUCCESSFUL, you can browse http://localhost:9000/dashboard/index/cpptestunusedfunction
INFO: Note that you will be able to access the updated dashboard once the server has processed the submitted analysis report
INFO: More about the report processing at http://localhost:9000/api/ce/task?id=AVcelWTjypdU1nQ8V0Uv
DEBUG: Report metadata written to /Users/Olivier/test/cppCheck/.sonar/report-task.txt
DEBUG: 'GitHub Pull Request Issue Publisher' skipped because one of the required properties is missing
DEBUG: Post-jobs : 
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 14.390s
INFO: Final Memory: 73M/1077M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6.1/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6.1
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.6 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
DEBUG: Extract sonar-scanner-api-batch in temp...
DEBUG: Get bootstrap index...
DEBUG: Download: http://localhost:9000/batch_bootstrap/index
DEBUG: Get bootstrap completed
DEBUG: Create isolated classloader...
DEBUG: Start temp cleaning...
DEBUG: Temp cleaning done
DEBUG: Execution getVersion
DEBUG: Execution start
DEBUG: Issues global mode
INFO: Load global repositories
DEBUG: GET 200 http://localhost:9000/batch/global | time=56ms
INFO: Load global repositories (done) | time=115ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Exclude plugins: devcockpit, buildstability, pdfreport, report, scmstats, buildbreaker, views, jira
INFO: Load plugins index
DEBUG: GET 200 http://localhost:9000/deploy/plugins/index.txt | time=3ms
INFO: Load plugins index (done) | time=3ms
DEBUG: Load plugins
DEBUG: Load plugins (done) | time=79ms
DEBUG: API compatibility mode is enabled on plugin PMD [pmd] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin RPG [rpg] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin SVN [scmsvn] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin C# [csharp] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Cobol [cobol] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Web [web] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Git [scmgit] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin XML [xml] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin PHP [php] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Checkstyle [checkstyle] (built with API lower than 5.2)
DEBUG: API compatibility mode is enabled on plugin Generic Coverage [genericcoverage] (built with API lower than 5.2)
DEBUG: Plugins:
DEBUG:   * Cobertura 1.7 (cobertura)
DEBUG:   * C / C++ / Objective-C 4.1 (cpp)
DEBUG:   * GitHub 1.3 (github)
DEBUG:   * PMD 2.6 (pmd)
DEBUG:   * RPG 1.4.1 (rpg)
DEBUG:   * PL/I 1.4 (pli)
DEBUG:   * SVN 1.3 (scmsvn)
DEBUG:   * JavaScript 2.16.0.2922 (javascript)
DEBUG:   * PL/SQL 2.8 (plsql)
DEBUG:   * C# 5.3.2 (csharp)
DEBUG:   * Findbugs 3.4.3 (findbugs)
DEBUG:   * Java 4.2 (java)
DEBUG:   * Cobol 3.1.1 (cobol)
DEBUG:   * Web 2.4 (web)
DEBUG:   * Git 1.2 (scmgit)
DEBUG:   * XML 1.4.1 (xml)
DEBUG:   * PHP 2.8 (php)
DEBUG:   * Checkstyle 2.4 (checkstyle)
DEBUG:   * Generic Coverage 1.2 (genericcoverage)
DEBUG:   * Governance 1.1 (governance)
DEBUG:   * Swift 1.7 (swift)
DEBUG: Execution getVersion
INFO: SonarQube server 5.6.1
INFO: Default locale: "en_US", source code encoding: "UTF-8"
DEBUG: Work directory: /Users/Olivier/test/cppCheck/.sonar
DEBUG: Execution getVersion
DEBUG: Execution execute
INFO: governance EVALUATION [Expiration: 2016-09-12, Server: *]
INFO: Process project properties
DEBUG: Process project properties (done) | time=2ms
INFO: Load project repositories
DEBUG: GET 200 http://localhost:9000/batch/project.protobuf?key=cpptestunusedfunction&issues_mode=true | time=30ms
INFO: Load project repositories (done) | time=107ms
INFO: Execute project builders
INFO: Execute project builders (done) | time=1ms
DEBUG: Available languages:
DEBUG:   * C => "c"
DEBUG:   * C++ => "cpp"
DEBUG:   * Objective-C => "objc"
DEBUG:   * RPG => "rpg"
DEBUG:   * PL/I => "pli"
DEBUG:   * JavaScript => "js"
DEBUG:   * PL/SQL => "plsql"
DEBUG:   * C# => "cs"
DEBUG:   * JSP => "jsp"
DEBUG:   * Java => "java"
DEBUG:   * COBOL => "cobol"
DEBUG:   * Web => "web"
DEBUG:   * XML => "xml"
DEBUG:   * PHP => "php"
DEBUG:   * Swift => "swift"
INFO: Load quality profiles
DEBUG: GET 200 http://localhost:9000/api/qualityprofiles/search.protobuf?projectKey=cpptestunusedfunction | time=20ms
INFO: Load quality profiles (done) | time=26ms
INFO: Load active rules
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=c-sonar-way-30182&p=1&ps=500 | time=67ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cobol-sonar-way-31923&p=1&ps=500 | time=39ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cpp-sonar-way-16593&p=1&ps=500 | time=81ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=cs-sonar-way-86349&p=1&ps=500 | time=55ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=java-sonar-way-92755&p=1&ps=500 | time=147ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=js-sonar-way-09021&p=1&ps=500 | time=56ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=jsp-findbugs-security-jsp-42021&p=1&ps=500 | time=19ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=objc-sonar-way-74022&p=1&ps=500 | time=56ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=php-sonar-way-10903&p=1&ps=500 | time=34ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=pli-sonarqube-way-26696&p=1&ps=500 | time=30ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=plsql-sonar-way-77251&p=1&ps=500 | time=61ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=rpg-sonar-way-07771&p=1&ps=500 | time=29ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=swift-sonar-way-72866&p=1&ps=500 | time=40ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=web-sonar-way-54717&p=1&ps=500 | time=24ms
DEBUG: GET 200 http://localhost:9000/api/rules/search.protobuf?f=repo,name,severity,lang,internalKey,templateKey,params,actives&activation=true&qprofile=xml-sonar-way-21504&p=1&ps=500 | time=28ms
INFO: Load active rules (done) | time=883ms
INFO: Issues mode
INFO: Scanning only changed files
DEBUG: Start recursive analysis of project modules
INFO: -------------  Scan C++ unused function
INFO: Language is forced to cpp
INFO: Load server rules
DEBUG: GET 200 http://localhost:9000/api/rules/list.protobuf | time=96ms
INFO: Load server rules (done) | time=115ms
DEBUG: Initializers : 
INFO: Base dir: /Users/Olivier/test/cppCheck
INFO: Working dir: /Users/Olivier/test/cppCheck/.sonar
INFO: Source paths: src
INFO: Source encoding: UTF-8, default locale: en_US
INFO: Index files
DEBUG: Declared extensions of language C were converted to sonar.lang.patterns.c : **/*.c,**/*.h
DEBUG: Declared extensions of language C++ were converted to sonar.lang.patterns.cpp : **/*.cc,**/*.cpp,**/*.cxx,**/*.c++,**/*.hh,**/*.hpp,**/*.hxx,**/*.h++,**/*.ipp,**/*.h
DEBUG: Declared extensions of language Objective-C were converted to sonar.lang.patterns.objc : **/*.m
DEBUG: Declared extensions of language RPG were converted to sonar.lang.patterns.rpg : **/*.rpg,**/*.rpgle,**/*.rpg,**/*.rpgle
DEBUG: Declared extensions of language PL/I were converted to sonar.lang.patterns.pli : **/*.pli
DEBUG: Declared extensions of language JavaScript were converted to sonar.lang.patterns.js : **/*.js
DEBUG: Declared extensions of language PL/SQL were converted to sonar.lang.patterns.plsql : **/*.sql,**/*.pks,**/*.pkb
DEBUG: Declared extensions of language C# were converted to sonar.lang.patterns.cs : **/*.cs
DEBUG: Declared extensions of language JSP were converted to sonar.lang.patterns.jsp : **/*.jsp
DEBUG: Declared extensions of language Java were converted to sonar.lang.patterns.java : **/*.java,**/*.jav
DEBUG: Declared extensions of language COBOL were converted to sonar.lang.patterns.cobol : 
DEBUG: Declared extensions of language Web were converted to sonar.lang.patterns.web : **/*.html,**/*.xhtml,**/*.rhtml,**/*.shtml
DEBUG: Declared extensions of language XML were converted to sonar.lang.patterns.xml : **/*.xml
DEBUG: Declared extensions of language PHP were converted to sonar.lang.patterns.php : **/*.php,**/*.php3,**/*.php4,**/*.php5,**/*.phtml,**/*.inc
DEBUG: Declared extensions of language Swift were converted to sonar.lang.patterns.swift : **/*.swift
DEBUG: Language of file 'src/Foo.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/HelloWorld.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/Foo.h' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.cpp' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass.h' is detected to be 'cpp'
DEBUG: Language of file 'src/SimpleClass2.cpp' is detected to be 'cpp'
INFO: 6 files indexed
INFO: Quality profile for cpp: Sonar way
DEBUG: 'C' skipped because there is no related file in current project
DEBUG: 'CPP' skipped because there is no related file in current project
DEBUG: 'Objective-C' skipped because there is no related file in current project
DEBUG: 'gcov' skipped because there is no related file in current project
DEBUG: 'cppunit' skipped because there is no related file in current project
DEBUG: 'VisualStudioCoverage' skipped because there is no related file in current project
DEBUG: 'bullseye' skipped because there is no related file in current project
DEBUG: 'PliSquidSensor' skipped because there is no related file in current project
DEBUG: 'JavaScript Squid Sensor' skipped because there is no related file in current project
DEBUG: 'PL/SQL Sensor' skipped because there is no related file in current project
DEBUG: 'FindBugs Sensor' skipped because there is no related file in current project
DEBUG: 'SurefireSensor' skipped because there is no related file in current project
DEBUG: 'JaCoCoSensor' skipped because there is no related file in current project
DEBUG: 'JaCoCoItSensor' skipped because there is no related file in current project
DEBUG: 'JaCoCoOverallSensor' skipped because there is no related file in current project
DEBUG: 'JavaSquidSensor' skipped because there is no related file in current project
DEBUG: 'Swift Squid Sensor' skipped because there is no related file in current project
DEBUG: Sensors : XmlFileSensor (wrapped)
INFO: Sensor XmlFileSensor (wrapped)
INFO: Sensor XmlFileSensor (wrapped) (done) | time=0ms
INFO: Load server issues
DEBUG: GET 200 http://localhost:9000/batch/issues.protobuf?key=cpptestunusedfunction | time=88ms
INFO: Load server issues (done) | time=119ms
INFO: Performing issue tracking
INFO: 8/8 components tracked
INFO: ANALYSIS SUCCESSFUL
DEBUG: 'GitHub Pull Request Issue Publisher' skipped because one of the required properties is missing
DEBUG: Post-jobs : 
INFO: ------------------------------------------------------------------------
INFO: EXECUTION SUCCESS
INFO: ------------------------------------------------------------------------
INFO: Total time: 5.200s
INFO: Final Memory: 62M/483M
INFO: ------------------------------------------------------------------------
DEBUG: Execution getVersion
DEBUG: Execution stop
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6.1/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6.1
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.6 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load global repositories
INFO: ------------------------------------------------------------------------
INFO: EXECUTION FAILURE
INFO: ------------------------------------------------------------------------
INFO: Total time: 1.061s
INFO: Final Memory: 7M/245M
INFO: ------------------------------------------------------------------------
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6.1/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6.1
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.6 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load global repositories
INFO: Load global repositories (done) | time=145ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Exclude plugins: devcockpit, buildstability, pdfreport, report, scmstats, buildbreaker, views, jira
INFO: Load plugins index
INFO: Load plugins index (done) | time=3ms
INFO: SonarQube server 5.6.1
INFO: ------------------------------------------------------------------------
INFO: EXECUTION FAILURE
INFO: ------------------------------------------------------------------------
INFO: Total time: 1.999s
INFO: Final Memory: 52M/391M
INFO: ------------------------------------------------------------------------
INFO: Scanner configuration file: /Users/Olivier/sq/sonar-scanner-2.6.1/conf/sonar-scanner.properties
INFO: Project root configuration file: /Users/Olivier/test/cppCheck/sonar-project.properties
INFO: SonarQube Scanner 2.6.1
INFO: Java 1.8.0_60 Oracle Corporation (64-bit)
INFO: Mac OS X 10.11.6 x86_64
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Load global repositories
INFO: Load global repositories (done) | time=101ms
INFO: User cache: /Users/Olivier/.sonar/cache
INFO: Exclude plugins: devcockpit, buildstability, pdfreport, report, scmstats, buildbreaker, views, jira
INFO: Load plugins index
INFO: Load plugins index (done) | time=5ms
INFO: SonarQube server 5.6.1
INFO: ------------------------------------------------------------------------
INFO: EXECUTION FAILURE
INFO: ------------------------------------------------------------------------
INFO: Total time: 1.602s
INFO: Final Memory: 52M/392M
INFO: ------------------------------------------------------------------------
